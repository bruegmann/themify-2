{"version":3,"sources":["logo.svg","lib/sass.js","shared.ts","components/VariableItem.tsx","components/VariableGroup.tsx","components/ThemeName.tsx","components/TextFieldWithTimer.tsx","examples/CommonComponents.tsx","examples/Typography.tsx","examples/Grid.tsx","examples/Albums.tsx","components/Examples.tsx","components/ThemesHome.tsx","components/ConfigAttribute.tsx","components/ConfigSection.tsx","components/ConfigHome.tsx","components/FileModal.tsx","pages/HomePage.tsx","icons/Themify.tsx","components/LibraryNoLogin.tsx","components/ThemeItem.tsx","components/LibraryLogin.tsx","pages/LibraryPage.tsx","icons/GitHub.tsx","components/GithubLogin.tsx","pages/SettingsPage.tsx","App.tsx","index.tsx"],"names":["module","exports","root","factory","Sass","globalWorkerUrl","SASSJS_RELATIVE_PATH","__dirname","noop","slice","workerUrl","Error","key","this","bind","_callbacks","_worker","Worker","addEventListener","_handleWorkerMessage","setWorkerUrl","style","nested","expanded","compact","compressed","comments","prototype","destroy","terminate","_importer","event","data","command","args","id","result","_dispatch","options","callback","Date","now","Math","random","postMessage","_importerInit","done","e","error","message","importer","importerCallback","Boolean","split","forEach","call","arguments","push","appLogo","require","phrases","getPhrase","keyword","countryCode","undefined","_phrases","navigator","language","toLowerCase","indexOf","VariableItem","props","useState","value","setValue","showColorPicker","setColorPicker","setDefaultValue","a","items","replace","tValue","setStateValue","sValue","onChange","getBool","className","title","description","name","type","target","aria-describedby","aria-label","checked","toString","placeholder","onDoubleClick","onClick","color","onChangeComplete","hex","VariableGroup","showGroupItem","setShowGroupItem","href","GroupName","Object","keys","map","item","ThemeName","edit","setEdit","setName","useEffect","Submit","onKeyDown","keyCode","timer","selectOnLineNumbers","automaticLayout","formatOnType","TextFieldWithTimer","handleChange","v","newValue","clearTimeout","includes","setTimeout","triggerChange","handleKeyDown","inputEl","PROPS","propName","height","theme","inputGroupPrepend","setInputEl","btnStrokes","bgTypes","CommonComponents","btnStroke","i","bgType","j","headings","displays","Typography","heading","display","Grid","dangerouslySetInnerHTML","__html","thumbnailSrc","Albums","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","data-toggle","data-target","aria-controls","aria-expanded","role","src","alt","Examples","component","label","examples","Nav","tabs","example","NavItem","NavLink","activeTab","TabContent","TabPane","tabId","varibales","btTypes","ThemesHome","Variables","setVariables","btVariables","setbtVariables","outputStyle","setOutputStyle","customStyle","setCustomStyle","btHashVars","compileBusy","themeName","setThemeName","setActiveTab","setError","length","tempbtVariable","JSON","parse","stringify","console","log","setVarType","afterValueChange","Utilities","startLoading","finishLoading","subitem","boolean","setHash","jsVarToSass","compile","tempbtVar","section","hashObject","window","parent","variablesChangeEvent","CustomEvent","detail","document","dispatchEvent","location","hash","encodeURIComponent","tempOutputStyle","_","spellCehck","whiteSpace","readOnly","disabled","minHeight","wordWrap","spellCheck","ConfigAttribute","setType","Edit","setShowColorPicker","dropdownOpen","setDropdownOpen","changedType","setChangedType","editable","setEditable","CheckType","cbValue","checkValue","String","changeType","submitName","isDisabled","onKeyPress","charCode","InputGroup","CustomInput","default","files","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","ConfigSection","attribute","setAttribute","change","setChange","selected","attrb","splice","onChangeValue","ConfigHome","setSelected","setValues","SetUp","getAttributeTemplate","user","access_token","ls","localStorage","getItem","setStartValue","fetch","proxy","organizations_url","headers","Authorization","method","res","json","then","org","company","login","repo","tree","findIndex","path","url","file","attr","atob","content","add","temp","appSettings","_declaration","setItem","removeItem","FileModal","organizations","setOrganizations","account","setAccount","load","setLoad","contentConfig","setContentConfig","contentTheme","setContentTheme","getOrganizations","putFile","body","response","editFile","shaConfig","find","o","shaTheme","config","btoa","sha","checkFileExist","status","FilesToGithub","showSuccess","hideSuccess","setAlertMessage","onChangeAccount","createRepo","CheckForDBRepo","createTheme","confirm","alert","Modal","open","ModalHeader","ModalBody","UncontrolledButtonDropdown","avatar_url","ModalFooter","HomePage","SelectedThemeConfig","setSelectedThemeConfig","modalNew","setModalNew","modalSave","setModalSave","valueConfig","valueTheme","decodeURIComponent","getClassSelectedThemeConfig","saveFileToZip","themify_proxy","array","zip","JSZip","arr1","arr2","folder","resp","k","generateAsync","saveAs","save","hasActions","logo","appTitle","break","icon","defaultCSS","themename","reload","changeNewModel","Icon","fillRule","strokeMiterlimit","clipRule","transform","clip-path","fillOpacity","gradientTransform","gradientUnits","offset","stopOpacity","stopColor","LibraryNoLogin","Themify","ThemeItem","delItems","del","username","primary","setDelItems","deleteFile","dele","backgroundColor","onSelect","LibraryLogin","libraryItems","setLibraryItems","orgItems","setOrgItems","getLibraryItems","getOrgs","TempItems","catch","getOrgLibraryItems","orgs","l","LibraryPage","showPage","setShowPage","fill-rule","React","createContext","GithubLogin","setUser","access_toke","Login","ErrorLogin","acces_token","githubuser","clientId","redirectUri","onSuccess","code","oauth","access","onFailure","scope","buttonText","SettingsPage","BlueReactVersionen","setBlueReactVersionen","setCSS","getVersions","time","index","currentNumber","currentTempArr","sortedArray","reduce","tempArr","val","array2","installBlueReact","version","css","htmlFor","App","setAccessToken","default_CSS","setdefault_CSS","default_Version","setdefault_Version","defaultVersion","expandSidebar","sidebarToggleIconComponent","pages","statusIcons","danger","info","success","warning","bottomContent","usr","token","isHome","ReactDOM","render","createElement","getElementById"],"mappings":"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","file":"static/js/main.7f1a3a54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fd37b25d.svg\";","/*! sass.js - v0.10.8 (eb28f5f) - built 2018-01-21\r\n  providing libsass 3.4.8 (a1f13edf)\r\n  via emscripten 1.37.0 ()\r\n */\r\n\r\n(function (root, factory) {\r\n  'use strict';\r\n  // if (typeof define === 'function' && define.amd) {\r\n  //   define([], factory);\r\n  // } else if (typeof exports === 'object') {\r\n  //   module.exports = factory();\r\n  // } else {\r\n    root.Sass = factory();\r\n  // }\r\n}(this, function () {/*global document*/\r\n// identify the path sass.js is located at in case we're loaded by a simple\r\n// <script src=\"path/to/sass.js\"></script>\r\n// this path can be used to identify the location of\r\n// * sass.worker.js from sass.js\r\n// * libsass.js.mem from sass.sync.js\r\n// see https://github.com/medialize/sass.js/pull/32#issuecomment-103142214\r\n// see https://github.com/medialize/sass.js/issues/33\r\nvar SASSJS_RELATIVE_PATH = (function() {\r\n  'use strict';\r\n\r\n  // in Node things are rather simple\r\n  if (typeof __dirname !== 'undefined') {\r\n    return __dirname;\r\n  }\r\n\r\n  // we can only run this test in the browser,\r\n  // so make sure we actually have a DOM to work with.\r\n  if (typeof document === 'undefined' || !document.getElementsByTagName) {\r\n    return null;\r\n  }\r\n\r\n  // http://www.2ality.com/2014/05/current-script.html\r\n  var currentScript = document.currentScript || (function() {\r\n    var scripts = document.getElementsByTagName('script');\r\n    return scripts[scripts.length - 1];\r\n  })();\r\n\r\n  var path = currentScript && currentScript.src;\r\n  if (!path) {\r\n    return null;\r\n  }\r\n\r\n  // [worker] make sure we're not running in some concatenated thing\r\n  if (path.slice(-8) === '/sass.js') {\r\n    return path.slice(0, -8);\r\n  }\r\n\r\n  // [sync] make sure we're not running in some concatenated thing\r\n  if (path.slice(-13) === '/sass.sync.js') {\r\n    return path.slice(0, -13);\r\n  }\r\n\r\n  return null;\r\n})() || '.';\r\n\r\n/*global Worker, SASSJS_RELATIVE_PATH*/\r\n// 'use strict';\r\n\r\nvar noop = function(){};\r\nvar slice = [].slice;\r\n// defined upon first Sass.initialize() call\r\nvar globalWorkerUrl;\r\n\r\nfunction Sass(workerUrl) {\r\n  if (!workerUrl && !globalWorkerUrl) {\r\n    /*jshint laxbreak:true */\r\n    throw new Error(\r\n      'Sass needs to be initialized with the URL of sass.worker.js - '\r\n      + 'either via Sass.setWorkerUrl(url) or by new Sass(url)'\r\n    );\r\n    /*jshint laxbreak:false */\r\n  }\r\n\r\n  if (!globalWorkerUrl) {\r\n    globalWorkerUrl = workerUrl;\r\n  }\r\n\r\n  // bind all functions\r\n  // we're doing this because we used to have a single hard-wired instance that allowed\r\n  // [].map(Sass.removeFile) and we need to maintain that for now (at least until 1.0.0)\r\n  for (var key in this) {\r\n    if (typeof this[key] === 'function') {\r\n      this[key] = this[key].bind(this);\r\n    }\r\n  }\r\n\r\n  this._callbacks = {};\r\n  this._worker = new Worker(workerUrl || globalWorkerUrl);\r\n  this._worker.addEventListener('message', this._handleWorkerMessage, false);\r\n}\r\n\r\n// allow setting the workerUrl before the first Sass instance is initialized,\r\n// where registering the global workerUrl would've happened automatically\r\nSass.setWorkerUrl = function(workerUrl) {\r\n  globalWorkerUrl = workerUrl;\r\n};\r\n\r\nSass.style = {\r\n  nested: 0,\r\n  expanded: 1,\r\n  compact: 2,\r\n  compressed: 3\r\n};\r\n\r\nSass.comments = {\r\n  'none': 0,\r\n  'default': 1\r\n};\r\n\r\nSass.prototype = {\r\n  style: Sass.style,\r\n  comments: Sass.comments,\r\n\r\n  destroy: function() {\r\n    this._worker && this._worker.terminate();\r\n    this._worker = null;\r\n    this._callbacks = {};\r\n    this._importer = null;\r\n  },\r\n\r\n  _handleWorkerMessage: function(event) {\r\n    if (event.data.command) {\r\n      this[event.data.command](event.data.args);\r\n    }\r\n\r\n    this._callbacks[event.data.id] && this._callbacks[event.data.id](event.data.result);\r\n    delete this._callbacks[event.data.id];\r\n  },\r\n\r\n  _dispatch: function(options, callback) {\r\n    if (!this._worker) {\r\n      throw new Error('Sass worker has been terminated');\r\n    }\r\n\r\n    options.id = 'cb' + Date.now() + Math.random();\r\n    this._callbacks[options.id] = callback;\r\n    this._worker.postMessage(options);\r\n  },\r\n\r\n  _importerInit: function(args) {\r\n    // importer API done callback pushing results\r\n    // back to the worker\r\n    var done = function done(result) {\r\n      this._worker.postMessage({\r\n        command: '_importerFinish',\r\n        args: [result]\r\n      });\r\n    }.bind(this);\r\n\r\n    try {\r\n      this._importer(args[0], done);\r\n    } catch(e) {\r\n      done({ error: e.message });\r\n      throw e;\r\n    }\r\n  },\r\n\r\n  importer: function(importerCallback, callback) {\r\n    if (typeof importerCallback !== 'function' && importerCallback !== null) {\r\n      throw new Error('importer callback must either be a function or null');\r\n    }\r\n\r\n    // callback is executed in the main EventLoop\r\n    this._importer = importerCallback;\r\n    // tell worker to activate importer callback\r\n    this._worker.postMessage({\r\n      command: 'importer',\r\n      args: [Boolean(importerCallback)]\r\n    });\r\n\r\n    callback && callback();\r\n  },\r\n};\r\n\r\nvar commands = 'writeFile readFile listFiles removeFile clearFiles lazyFiles preloadFiles options compile compileFile';\r\ncommands.split(' ').forEach(function(command) {\r\n  Sass.prototype[command] = function() {\r\n    var callback = slice.call(arguments, -1)[0];\r\n    var args = slice.call(arguments, 0, -1);\r\n    if (typeof callback !== 'function') {\r\n      args.push(callback);\r\n      callback = noop;\r\n    }\r\n\r\n    this._dispatch({\r\n      command: command,\r\n      args: args\r\n    }, callback);\r\n  };\r\n});\r\n\r\n// automatically set the workerUrl in case we're loaded by a simple\r\n// <script src=\"path/to/sass.js\"></script>\r\n// see https://github.com/medialize/sass.js/pull/32#issuecomment-103142214\r\nSass.setWorkerUrl(SASSJS_RELATIVE_PATH + '/sass.worker.js');\r\nreturn Sass;\r\n}));","export const appLogo = require(\"./logo.svg\");\r\nexport const appTitle = \"Themify\";\r\n\r\ninterface IPhrases {\r\n    [key: string]: string[]\r\n}\r\n\r\nexport const phrases: IPhrases = {\r\n    \"HELLO_WORLD\": [\"Hello World!\", \"Hallo Welt!\"],\r\n    \"SAVE_AS\": [\"Save as\", \"Speichern unter\"],\r\n    \"RESET_TO_DEFAULT\": [\"Reset to default\", \"Zurücksetzen\"],\r\n    \"SHARE_THIS_CONFIG\": [\"Share this config\", \"Diese Konfig teilen\"],\r\n    \"SAVE_TO_LIB\": [\"Save to Library\", \"Speichern in Library\"],\r\n    \"SAVE\": [\"Save\", \"Speichern\"],\r\n    \"EXPORT_ZIP\": [\"Export as zip\", \"Als Zip exportieren\"],\r\n    \"IMPORT_CONFIG\": [\"Import config\", \"Konfig importieren\"],\r\n    \"EXPORT\": [\"Export ... \", \"Exportieren ... \"],\r\n    \"NEED_GITHUB_LOGIN\": [\"To use Themify/Library you need to login with Github.\", \"Um Themify/Library zu benutzen, musst du dich mit Github anmelden.\"],\r\n    \"NEW\": [\"New\", \"Neu\"],\r\n    \"CUSTOMIZER\": [\"Customizer\", \"Customizer\"],\r\n    \"THEME\": [\"Theme\", \"Theme\"],\r\n    \"CONFIG\": [\"Config\", \"Konfig\"],\r\n    \"LIBRARY\": [\"Library\", \"Bibliothek\"],\r\n    \"TEXT\": [\"Text\", \"Text\"],\r\n    \"File\": [\"File\", \"Datei\"],\r\n    \"COLOR\": [\"Color\", \"Farbe\"],\r\n    \"BOOLEAN\": [\"Boolean\", \"Boolescher Wert\"],\r\n    \"TEMPLATE\": [\"Template\", \"Vorlage\"],\r\n    \"ADD\": [\"Add\", \"Hinzufügen\"],\r\n    \"NO_ATTRIBUTES\": [\"There are no attributes. Add your attributes or add a template\", \"Es sind keine Attributen vorhanden. Fügen Sie Attributen hinzu oder wählen sie ein Template\"],\r\n    \"LOGIN_WITH_GITHUB\": [\"Login with Github\", \"Einloggen mit Github\"],\r\n    \"THEMIFY/LIBRARY\": [\"Themify/Library\", \"Themify/Bibliothek\"],\r\n    \"CREATE_NEW_THEME\": [\"Create new Theme\", \"Neues Theme erstellen\"],\r\n    \"ACCOUNT\": [\"Account\", \"Konto\"],\r\n    \"NOT_ONLINE_STORAGE\": [\"Online storage not possible. You have to be logged in to Github\", \"Online Speichern nicht möglich. Du musst bei Github angemeldet sein\"],\r\n    \"CANCEL\": [\"Cancel\", \"Abbrechen\"],\r\n    \"SUBMIT\": [\"Submit\", \"Absenden\"],\r\n    \"DELETE\": [\"Delete\", \"Löschen\"],\r\n    \"LOCAL_THEME\": [\"Local Theme\", \"Lokales Theme\"],\r\n    \"BLUE_DOCUMENTATION\": [\"Blue Documentation\", \"Blue Dokumentation\"],\r\n    \"NO_DATABASE\": [\"There doesn't seem to be a database yet. Do you want to create a database?\", \"Es scheint noch keine Datenbank vorhande zu sein. Wollen sie eine Datenbank erstellen?\"],\r\n    \"ORG_THEME\": [\"Organisation Themes\", \"Organisations Themes\"],\r\n    \"THEMES\": [\"Themes\", \"Themes\"],\r\n    \"OUTPUT_STYLE_PLACEHOLDER\": [\r\n        \"No compiled stylesheet yet. Change some variables and see what will happen.\",\r\n        \"Noch kein kompilierter Stylesheet. Ändere ein paar Variablen und sieh, was passiert.\"\r\n    ],\r\n    \"SOMETHING_WENT_WRONG\": [\"Something went wrong while compiling\", \"Beim Kompilieren gab es einen Fehler\"],\r\n    \"COMPILE_ERROR_TXT\": [\r\n        \"This might happen when you use variables without defining them before.\\nBy the way: You can use the default value of a variable when you double-click on it's input field.\",\r\n        \"Das kann passieren, wenn du Variablen nutzt, ohne sie vorher zu definieren.\\nÜbrigens: Du kannst den Standardwert einer Variable nutzen, indem du auf dessen Eingabefeld doppelklickst.\"\r\n    ],\r\n    \"THIS_IS_ERROR_MESSAGE\": [\"This is the error message:\", \"Das ist die Fehlermeldung:\"],\r\n    \"CUSTOM_STYLE_PLACEHOLDER\": [\r\n        \"Here you can insert custom CSS, for example to import a webfont.\",\r\n        \"Hier kannst du zusätzliches CSS einfügen, z.B. um eine Webfont zu importieren.\"\r\n    ],\r\n};\r\n\r\nexport function getPhrase(keyword: string, countryCode: string | undefined = undefined, _phrases: IPhrases | undefined = undefined) {\r\n    countryCode = countryCode || (navigator.language).toLowerCase().indexOf(\"de\") > -1 ? \"de-DE\" : \"en-US\";\r\n    _phrases = _phrases || phrases;\r\n\r\n    if (_phrases[keyword]) {\r\n        if (countryCode.indexOf(\"de-\") > -1) {\r\n            return _phrases[keyword][1];\r\n        }\r\n        else {\r\n            return _phrases[keyword][0];\r\n        }\r\n    }\r\n    else {\r\n        return keyword;\r\n    }\r\n}\r\n\r\nexport function createPhrase(keywords: any) {\r\n    let countryCode = (navigator.language).toLowerCase().indexOf(\"de\") > -1 ? \"de-DE\" : \"en-US\";\r\n    let phrases = [] as any;\r\n    let i: any;\r\n    let keywordsCount = keywords.length as any;\r\n\r\n    for (i = 0; i < keywordsCount; i++) {\r\n        phrases.push(getPhrase(keywords[i], countryCode))\r\n    }\r\n\r\n    return phrases.join(\" \");\r\n}","import React, { useState } from 'react'\r\nimport { InfoCircle, DropletHalf, CodeSlash } from \"react-bootstrap-icons\"\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nexport default function VariableItem(props: any) {\r\n    const [value, setValue] = useState<string>(\"\");\r\n    const [showColorPicker, setColorPicker] = useState<boolean>(false);\r\n\r\n    const setDefaultValue = async () => {\r\n        if (value === \"\") {\r\n            const tValue = await (props.items.value).replace(\" !default\", \"\")\r\n            setStateValue(tValue);\r\n        }\r\n    }\r\n\r\n    const setStateValue = (sValue: string) => {\r\n        setValue(sValue);\r\n        props.onChange(sValue);\r\n    }\r\n\r\n    const getBool = (value: string) => {\r\n        if (value === \"true\") {\r\n            return true\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const getInputFeld = () => {\r\n        if (props.items.type === \"boolean\") {\r\n            return (\r\n                <div className=\"input-group mb-3 \">\r\n                    <input\r\n                        className=\"form-control default\"\r\n                        value={value}\r\n                        onChange={(event) => {setValue(event.target.value)}}\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"></input>\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <input\r\n                                type=\"checkbox\" aria-label=\"Checkbox for following text input\"\r\n                                checked={getBool(value)}\r\n                                onChange={(event) => { setValue(event.target.checked.toString()) }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        else if (props.items.type === \"color\") {\r\n            return (\r\n                <div>\r\n                    <div className=\"input-group\">\r\n                        <input\r\n                            className=\"form-control default\"\r\n                            id=\"exampleInputEmail1\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            value={value}\r\n                            onChange={(event) => { setValue(event.target.value) }}\r\n                            placeholder={`/* ${props.items.value} */`}\r\n                            onDoubleClick={() => { setDefaultValue() }}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <button\r\n                                className=\"btn btn-outline-secondary\"\r\n                                onClick={() => setColorPicker(!showColorPicker)}\r\n\r\n                            >\r\n                                <span ><DropletHalf /></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"offset-sm-1 col-sm-8\">\r\n                        {\r\n                            showColorPicker === true &&\r\n                            <SketchPicker\r\n                                color={value}\r\n                                onChangeComplete={(color: any) => setValue(color.hex)}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <input\r\n                    className=\"form-control default\"\r\n                    placeholder={`/* ${props.items.value} */`}\r\n                    value={value}\r\n                    onChange={(event) => { setStateValue(event.target.value) }}\r\n                    onDoubleClick={() => { setDefaultValue() }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mb-2\">\r\n            <div className=\"col-5\">\r\n                <span title={props.items.description}>\r\n                    <InfoCircle className=\"text-info mr-1\" />\r\n                </span>\r\n                {props.name}\r\n            </div>\r\n            <div className=\"col\">\r\n                {getInputFeld()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport VariableItem from './VariableItem'\r\n\r\n\r\nexport default function VariableGroup(props: any) {\r\n\r\n    const [showGroupItem, setShowGroupItem] = useState<Boolean>(true);\r\n\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <a\r\n                    href=\"javascript:void(0)\"\r\n                    target=\"_self\"\r\n                    onClick={() => { setShowGroupItem(!showGroupItem) }}\r\n                >\r\n                    <h5>\r\n                        {props.GroupName}\r\n                    </h5>\r\n                </a>\r\n\r\n                {showGroupItem === true &&\r\n                    Object.keys(props.items).map((item: any) =>\r\n                        <VariableItem\r\n                            key={item}\r\n                            name={item}\r\n                            items={props.items[item]}\r\n                            onChange={(value: string) => {\r\n                                props.onChange(value, item)\r\n\r\n                            }}\r\n                        />\r\n\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { X, Check } from \"react-bootstrap-icons\"\r\n\r\nexport default function ThemeName(props: any) {\r\n\r\n    const [edit, setEdit] = useState<Boolean>(false);\r\n    const [name, setName] = useState<string>(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.name) {\r\n            setName(props.name)\r\n        }\r\n    }, [props.name])\r\n\r\n    const Submit = () =>{\r\n        setEdit(false);\r\n        props.onChange(name);\r\n    }\r\n\r\n    const Cancel = () =>{\r\n        setEdit(false);\r\n        setName(props.name);\r\n    }\r\n\r\n    const PressKey = (key: number) =>{\r\n        if(key === 13){\r\n            Submit();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-3 mt-3\">\r\n            {edit === true ?\r\n                <div className=\"input-group input-group-lg\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                        onChange={(event) => { setName(event.target.value) }}\r\n                        onKeyDown={(event) => PressKey(event.keyCode )}\r\n                    />\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <button\r\n                            className=\"btn btn-outline-primary\"\r\n                            onClick={() => Submit()}\r\n                        >\r\n                            <span><Check /></span>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-outline-secondary\"\r\n                            onClick={() => Cancel()}\r\n                        >\r\n                            <span><X /></span>\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n                :\r\n                <h1\r\n                    title=\"Rename Theme\"\r\n                    onClick={() => setEdit(true)}\r\n                >\r\n                    {name}\r\n                </h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport MonacoEditor from \"react-monaco-editor\";\r\n\r\nconst WAIT_INTERVAL = 1000;\r\nconst ENTER_KEY = 13;\r\n\r\nlet timer: any;\r\n\r\n\r\n\r\nconst options = {\r\n    selectOnLineNumbers: true,\r\n    automaticLayout: true,\r\n    formatOnType: true\r\n};\r\n\r\nexport default function TextFieldWithTimer(props: any) {\r\n    const [value, setValue] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        timer = null;\r\n        if (props.value) {\r\n            setValue(props.value);\r\n        } else {\r\n            setValue(\"/* \" + props.placeholder + \" */\");\r\n        }\r\n    }, [props.value])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!value && !props.value) {\r\n            setValue(\"/* \" + props.placeholder + \" */\");\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = (v: any) => {\r\n        let newValue: any;\r\n        clearTimeout(timer)\r\n        if (v.includes(\"/* \" + props.placeholder + \" */\")) {\r\n            newValue = v.replace((\"/* \" + props.placeholder + \" */\"), \"\");\r\n        } else {\r\n            newValue = v;\r\n        }\r\n\r\n\r\n        setValue(newValue);\r\n        timer = setTimeout(() => { triggerChange() }, WAIT_INTERVAL);\r\n\r\n    }\r\n\r\n    const handleKeyDown = (e: any) => {\r\n        if (e.keyCode === ENTER_KEY) {\r\n            triggerChange();\r\n        }\r\n    }\r\n\r\n    const triggerChange = () => {\r\n        const v: any = value;\r\n\r\n        props.onChange(v);\r\n    }\r\n\r\n    const autoLayout = (editor: any) => {\r\n        window.addEventListener(\"resize\", () => {\r\n            editor.layout();\r\n        })\r\n    }\r\n    const setInputEl = () => {\r\n        let PROPS: any = {};\r\n        Object.keys(props).map((propName: any) => {\r\n            if (propName != \"inputGroupPrepend\" && propName != \"type\") {\r\n                PROPS[propName] = props[propName]\r\n            }\r\n        })\r\n\r\n        let inputEl: any;\r\n\r\n        if (props.type === \"text\") {\r\n            inputEl = (\r\n                <input\r\n                    {...props}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(event: any) => { handleChange(event.target.value) }}\r\n                    onKeyDown={(event: any) => handleKeyDown(event)}\r\n                />\r\n            )\r\n        } else if (props.type === \"textarea\") {\r\n            inputEl = (\r\n                <MonacoEditor\r\n                    {...props}\r\n                    height=\"600\"\r\n                    language=\"scss\"\r\n                    theme=\"vs-light\"\r\n                    value={value}\r\n                    options={options}\r\n                    onChange={(event: any) => handleChange(event)}\r\n                    onKeyDown={(event: any) => handleKeyDown(event)}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (props.inputGroupPrepend) {\r\n            return (\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        {props.inputGroupPrepend}\r\n                    </div>\r\n                    {inputEl}\r\n                </div>\r\n            )\r\n        } else {\r\n            return inputEl;\r\n        }\r\n    }\r\n    return setInputEl();\r\n\r\n}\r\n","\r\nimport React from 'react'\r\nconst btnStrokes = [\"\", \"-outline\"];\r\nconst bgTypes = [\"primary\", \"secondary\", \"success\", \"info\", \"warning\", \"danger\", \"light\", \"dark\"];\r\nexport default function CommonComponents(props: any) {\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h1 className=\"mt-4 mb-3\">Buttons</h1>\r\n\r\n                {btnStrokes.map((btnStroke, i) =>\r\n                    <div key={i} className=\"mb-3\">\r\n                        {bgTypes.map((bgType, j) =>\r\n                            <button\r\n                                key={i + \"-\" + j}\r\n                                className={`btn btn${btnStroke}-${bgType} mr-1`}\r\n                            >\r\n                                {bgType}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </section>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <section>\r\n                        <h1 className=\"mt-4 mb-3\">Alerts</h1>\r\n\r\n                        {bgTypes.map((bgType, i) =>\r\n                            <div\r\n                                key={i}\r\n                                className={`alert alert-${bgType} mb-3`}\r\n                            >\r\n                                A simple primary alert with <a href=\"#\" className=\"alert-link\">an example link</a>. Give it a click if you like. ({bgType})\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <section>\r\n                        <h1 className=\"mt-4 mb-3\">Cards</h1>\r\n\r\n                        {bgTypes.map((bgType, i) =>\r\n                            <div\r\n                                key={i}\r\n                                className={`card ${bgType !== \"light\" ? \"text-white\" : \"\"} bg-${bgType} mb-3`}\r\n                            >\r\n                                <div className=\"card-header\">Header</div>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Card title {bgType}</h5>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nlet headings: any[] = [];\r\nlet displays: any[] = [];\r\n\r\nfor (let i = 1; i <= 6; i++) {\r\n    headings.push(i);\r\n}\r\n\r\nfor (let i = 1; i <= 4; i++) {\r\n    displays.push(i);\r\n}\r\n\r\n\r\nexport default function Typography(props: any) {\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h1 className=\"mt-4 mb-3\">Headings</h1>\r\n\r\n                {headings.map((heading: any, i: any) =>\r\n                    <div key={heading} className={`h${heading} mt-4 mb-3`}>h{heading}. Bootstrap heading</div>\r\n                )}\r\n            </section>\r\n\r\n            <section>\r\n                <h1 className=\"mt-5 mb-3\">Customizing headings</h1>\r\n\r\n                <h3>\r\n                    Fancy display heading\r\n                        <small className=\"text-muted\">With faded secondary text</small>\r\n                </h3>\r\n            </section>\r\n\r\n            <section>\r\n                <h1 className=\"mt-5 mb-3\">Display headings</h1>\r\n\r\n                {displays.map((display: any, i: any) =>\r\n                    <h1 key={display} className={`display-${display}`}>Display {display}</h1>\r\n                )}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\nexport default function Grid(props: any) {\r\n\r\n    return (\r\n        <div className=\"grid-example container\">\r\n            <style\r\n                type=\"text/css\"\r\n                dangerouslySetInnerHTML={{\r\n                    __html: `\r\n                            .grid-example h3 {\r\n                                margin-top: 2rem;\r\n                            }\r\n                            \r\n                            .grid-example .row {\r\n                                margin-bottom: 1rem;\r\n                            }\r\n                            .grid-example .row .row {\r\n                                margin-top: 1rem;\r\n                                margin-bottom: 0;\r\n                            }\r\n                            .grid-example [class*=\"col-\"] {\r\n                                padding-top: 1rem;\r\n                                padding-bottom: 1rem;\r\n                                background-color: rgba(86, 61, 124, .15);\r\n                                border: 1px solid rgba(86, 61, 124, .2);\r\n                            }\r\n                            \r\n                            .grid-example hr {\r\n                                margin-top: 2rem;\r\n                                margin-bottom: 2rem;\r\n                            }\r\n                        `\r\n                }}\r\n            />\r\n\r\n            <h1>Bootstrap grid examples</h1>\r\n            <p className=\"lead\">Basic grid layouts to get you familiar with building within the Bootstrap grid system.</p>\r\n            <h3>Five grid tiers</h3>\r\n            <p>There are five tiers to the Bootstrap grid system, one for each range of devices we support. Each tier starts at a minimum viewport size and automatically applies to the larger devices unless overridden.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">.col-4</div>\r\n                <div className=\"col-4\">.col-4</div>\r\n                <div className=\"col-4\">.col-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">.col-sm-4</div>\r\n                <div className=\"col-sm-4\">.col-sm-4</div>\r\n                <div className=\"col-sm-4\">.col-sm-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4\">.col-lg-4</div>\r\n                <div className=\"col-lg-4\">.col-lg-4</div>\r\n                <div className=\"col-lg-4\">.col-lg-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-4\">.col-xl-4</div>\r\n                <div className=\"col-xl-4\">.col-xl-4</div>\r\n                <div className=\"col-xl-4\">.col-xl-4</div>\r\n            </div>\r\n            <h3>Three equal columns</h3>\r\n            <p>Get three equal-width columns <strong>starting at desktops and scaling to large desktops</strong>. On mobile devices, tablets and below, the columns will automatically stack.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n            </div>\r\n            <h3>Three unequal columns</h3>\r\n            <p>Get three columns <strong>starting at desktops and scaling to large desktops</strong> of various widths. Remember, grid columns should add up to twelve for a single horizontal block. More than that, and columns start stacking no matter the viewport.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3\">.col-md-3</div>\r\n                <div className=\"col-md-6\">.col-md-6</div>\r\n                <div className=\"col-md-3\">.col-md-3</div>\r\n            </div>\r\n            <h3>Two columns</h3>\r\n            <p>Get two columns <strong>starting at desktops and scaling to large desktops</strong>.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">.col-md-8</div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n            </div>\r\n            <h3>Full width, single column</h3>\r\n            <p className=\"text-warning\">No grid classes are necessary for full-width elements.</p>\r\n            <hr />\r\n            <h3>Two columns with two nested columns</h3>\r\n            <p>Per the documentation, nesting is easy—just put a row of columns within an existing column. This gives you two columns <strong>starting at desktops and scaling to large desktops</strong>, with another two (equal widths) within the larger column.</p>\r\n            <p>At mobile device sizes, tablets and down, these columns and their nested columns will stack.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    .col-md-8\r\n                  <div className=\"row\">\r\n                        <div className=\"col-md-6\">.col-md-6</div>\r\n                        <div className=\"col-md-6\">.col-md-6</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\">.col-md-4</div>\r\n            </div>\r\n            <hr />\r\n            <h3>Mixed: mobile and desktop</h3>\r\n            <p>The Bootstrap v4 grid system has five tiers of classes: xs (extra small), sm (small), md (medium), lg (large), and xl (extra large). You can use nearly any combination of these classes to create more dynamic and flexible layouts.</p>\r\n            <p>Each tier of classes scales up, meaning if you plan on setting the same widths for xs and sm, you only need to specify xs.</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8\">.col-12 .col-md-8</div>\r\n                <div className=\"col-6 col-md-4\">.col-6 .col-md-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-md-4\">.col-6 .col-md-4</div>\r\n                <div className=\"col-6 col-md-4\">.col-6 .col-md-4</div>\r\n                <div className=\"col-6 col-md-4\">.col-6 .col-md-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">.col-6</div>\r\n                <div className=\"col-6\">.col-6</div>\r\n            </div>\r\n            <hr />\r\n            <h3>Mixed: mobile, tablet, and desktop</h3>\r\n            <p />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-6 col-lg-8\">.col-12 .col-sm-6 .col-lg-8</div>\r\n                <div className=\"col-6 col-lg-4\">.col-6 .col-lg-4</div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-sm-4\">.col-6 .col-sm-4</div>\r\n                <div className=\"col-6 col-sm-4\">.col-6 .col-sm-4</div>\r\n                <div className=\"col-6 col-sm-4\">.col-6 .col-sm-4</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nconst thumbnailSrc = `data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22348%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20348%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_16147c6db09%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A17pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_16147c6db09%22%3E%3Crect%20width%3D%22348%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22116.7265625%22%20y%3D%22120.3%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E` as any;\r\nexport default function Albums(props: any) {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <div className=\"collapse bg-dark\" id=\"navbarHeader\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-8 col-md-7 py-4\">\r\n                                <h4 className=\"text-white\">About</h4>\r\n                                <p className=\"text-muted\">Add some information about the album below, the author, or any other background context. Make it a few sentences long so folks can pick up some informative tidbits. Then, link them off to some social networking sites or contact information.</p>\r\n                            </div>\r\n                            <div className=\"col-sm-4 offset-md-1 py-4\">\r\n                                <h4 className=\"text-white\">Contact</h4>\r\n                                <ul className=\"list-unstyled\">\r\n                                    <li><a href=\"#\" target=\"_self\" className=\"text-white\">Follow on Twitter</a></li>\r\n                                    <li><a href=\"#\" target=\"_self\" className=\"text-white\">Like on Facebook</a></li>\r\n                                    <li><a href=\"#\" target=\"_self\" className=\"text-white\">Email me</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"navbar navbar-dark bg-dark box-shadow\">\r\n                    <div className=\"container d-flex justify-content-between\">\r\n                        <a href=\"#\" target=\"_self\" className=\"navbar-brand d-flex align-items-center\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width={20} height={20} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\" /><circle cx={12} cy={13} r={4} /></svg>\r\n                            <strong>Album</strong>\r\n                        </a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\" aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <main role=\"main\">\r\n                <section className=\"jumbotron text-center\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"jumbotron-heading\">Album example</h1>\r\n                        <p className=\"lead text-muted\">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don't simply skip over it entirely.</p>\r\n                        <p>\r\n                            <a href=\"#\" target=\"_self\" className=\"btn btn-primary my-2\">Main call to action</a>\r\n                            <a href=\"#\" target=\"_self\" className=\"btn btn-secondary my-2\">Secondary action</a>\r\n                        </p>\r\n                    </div>\r\n                </section>\r\n                <div className=\"album py-5 bg-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"card mb-4 box-shadow\">\r\n                                    <img className=\"card-img-top\" src={thumbnailSrc} alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div className=\"btn-group\">\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">View</button>\r\n                                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Edit</button>\r\n                                            </div>\r\n                                            <small className=\"text-muted\">9 mins</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            <footer className=\"text-muted\">\r\n                <div className=\"container\">\r\n                    <p className=\"float-right\">\r\n                        <a href=\"#\" target=\"_self\">Back to top</a>\r\n                    </p>\r\n                    <p>Album example is © Bootstrap, but please download and customize it for yourself!</p>\r\n                    <p>New to Bootstrap? <a href=\"../../\" target=\"_self\">Visit the homepage</a> or read our <a href=\"../../getting-started/\" target=\"_self\">getting started guide</a>.</p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useState } from 'react'\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nimport CommonComponents from \"../examples/CommonComponents\";\r\nimport Typography from \"../examples/Typography\";\r\nimport Grid from \"../examples/Grid\";\r\nimport Albums from \"../examples/Albums\";\r\n\r\n\r\n\r\nexport default function Examples(props: any) {\r\n    const [examples, setExamples] = useState<any[]>(\r\n        [\r\n            {\r\n                component: <CommonComponents />,\r\n                label: \"Common components\"\r\n            },\r\n            {\r\n                component: <Typography />,\r\n                label: \"Typography\"\r\n            },\r\n            {\r\n                component: <Grid />,\r\n                label: \"Grid\"\r\n            },\r\n            {\r\n                component: <Albums />,\r\n                label: \"Album\"\r\n            }\r\n        ]\r\n    )\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1 className=\"display-4 mt-4 mb-3\">{\"Examples\"}</h1>\r\n\r\n            <Nav tabs>\r\n                {examples.map((example: any, i: any) =>\r\n                    <NavItem key={i}>\r\n                        <NavLink\r\n                            href=\"javascript:void(0)\"\r\n                            className={props.activeTab == i ? \"active\" : \"\"}\r\n                            onClick={() => props.onClick(i)}\r\n                        >\r\n                            {example.label}\r\n                        </NavLink>\r\n                    </NavItem>\r\n                )}\r\n            </Nav>\r\n\r\n            <TabContent activeTab={props.activeTab} className=\"m-3\">\r\n                {examples.map((example: any, i: any) =>\r\n                    <TabPane key={i} tabId={i}>\r\n                        {example.component}\r\n                    </TabPane>\r\n                )}\r\n            </TabContent>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport VariableGroup from \"./VariableGroup\";\r\nimport ThemeName from \"./ThemeName\";\r\nimport TextFieldWithTimer from \"./TextFieldWithTimer\";\r\nimport Examples from \"./Examples\";\r\nimport { getPhrase as _ } from \"../shared\";\r\nimport { Utilities } from \"blue-react\";\r\n\r\n\r\n\r\nlet varibales = require(\"../data/bootstrap.variables.json\")\r\nlet btTypes = require(\"../data/bootstrap.types.json\")\r\n\r\n\r\n\r\nconst { Sass } = require(\"../lib/sass\")\r\nSass.setWorkerUrl(\"sass.worker.js\")\r\n\r\nconst sass = new Sass()\r\nsass.options({\r\n    style: Sass.style.compressed\r\n})\r\n\r\n\r\nexport default function ThemesHome(props: any) {\r\n\r\n    const [Variables, setVariables] = useState<any[]>([]);\r\n    const [btVariables, setbtVariables] = useState<any[]>([]);\r\n    const [outputStyle, setOutputStyle] = useState<string>(\"\");\r\n    const [customStyle, setCustomStyle] = useState<string>(\"\");\r\n    const [btHashVars, setbtHashVars] = useState<any[]>([]);\r\n    const [compileBusy, setCompileBusy] = useState<Boolean>(false);\r\n    const [themeName, setThemeName] = useState<String>(\"\");\r\n    const [activeTab, setActiveTab] = useState<number>(0);\r\n    const [error, setError] = useState<any>();\r\n    const [resultStyle, setResultStyle] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        if (Variables.length === 0) {\r\n            const tempbtVariable = JSON.parse(JSON.stringify(varibales));\r\n            Object.keys(tempbtVariable).map((item: any) => {\r\n                tempbtVariable[item] = {}\r\n            })\r\n            console.log(JSON.stringify(ThemeName))\r\n\r\n            setVarType();\r\n            setVariables(varibales);\r\n            setbtVariables(tempbtVariable);\r\n            afterValueChange();\r\n        }\r\n\r\n    }, [Variables])\r\n\r\n    useEffect(() => {\r\n        setThemeName(props.name);\r\n    }, [props.name])\r\n\r\n    useEffect(() => {\r\n        if (customStyle) {\r\n            setCustomStyle(customStyle);\r\n            afterValueChange();\r\n        } else {\r\n            afterValueChange();\r\n        }\r\n    }, [customStyle])\r\n\r\n\r\n    useEffect(() => {\r\n        if (compileBusy) {\r\n            Utilities.startLoading();\r\n        } else {\r\n            Utilities.finishLoading();\r\n        }\r\n    }, [compileBusy])\r\n\r\n    const setVarType = () => {\r\n        Object.keys(varibales).map((item: any) => {\r\n            Object.keys(varibales[item]).map((subitem: any) => {\r\n                if (btTypes.boolean.includes(subitem)) {\r\n                    varibales[item][subitem].type = \"boolean\"\r\n                }\r\n                else if (btTypes.color.includes(subitem)) {\r\n                    varibales[item][subitem].type = \"color\"\r\n                }\r\n                else {\r\n                    varibales[item][subitem].type = \"string\"\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const afterValueChange = async () => {\r\n        setHash();\r\n        await jsVarToSass();\r\n        compile();\r\n    }\r\n\r\n    const setHash = () => {\r\n        let tempbtVar: any = {};\r\n\r\n        Object.keys(btVariables).map((i: any) => {\r\n            const section = btVariables[i];\r\n            if (Object.keys(section).length > 0) {\r\n                tempbtVar[i] = section;\r\n            }\r\n        })\r\n\r\n        const hashObject: any = {\r\n            name: themeName,\r\n            btHashVars: btHashVars\r\n        }\r\n\r\n        if (activeTab != 0) {\r\n            hashObject.activeTab = activeTab;\r\n        }\r\n\r\n        if (customStyle != \"\") {\r\n            hashObject.customStyle = customStyle;\r\n        }\r\n\r\n        if (window.parent) {\r\n            const variablesChangeEvent = new CustomEvent(\"variablesChangeEvent\", {\r\n                detail: hashObject\r\n            });\r\n            window.parent.document.dispatchEvent(variablesChangeEvent);\r\n        }\r\n\r\n        window.location.hash = \"/home/\" + encodeURIComponent(JSON.stringify(hashObject));\r\n\r\n    }\r\n\r\n    const getComment = () => {\r\n        return `/*\\nOpen the following link to edit this config on Themify\\n${window.location.href}\\n*/\\n`;\r\n    }\r\n\r\n    const jsVarToSass = async (callback?: any) => {\r\n        setOutputStyle(\"\");\r\n        var tempOutputStyle: string = \"\";\r\n\r\n        Object.keys(btVariables).map((i: any) => {\r\n            const section = btVariables[i];\r\n\r\n            if (Object.keys(section).length > 0) {\r\n                console.log(section)\r\n                tempOutputStyle += `// ${i}\\n//\\n\\n`;\r\n\r\n                Object.keys(section).map((key: any) => {\r\n                    tempOutputStyle += key + \": \" + section[key].value + \";\\n\";\r\n                });\r\n\r\n                tempOutputStyle += \"\\n\\n\";\r\n            }\r\n        })\r\n\r\n        tempOutputStyle = customStyle + \"\\n\\n\" + tempOutputStyle;\r\n\r\n        if (tempOutputStyle !== \"\") {\r\n            tempOutputStyle = getComment() + tempOutputStyle\r\n        }\r\n        await setOutputStyle(tempOutputStyle)\r\n        if (callback!) {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n    const compile = (callback?: any) => {\r\n        // let style: string;\r\n        // if (props.defaultCSS && !localStorage.getItem(\"css\")) {\r\n        //     style = outputStyle + JSON.parse(JSON.stringify(props.defaultCSS));\r\n        // } else if (localStorage.getItem(\"css\")) {\r\n        //     style = outputStyle + JSON.parse(localStorage.getItem(\"css\")!)\r\n        // }\r\n\r\n        // console.log(style!);\r\n        // setCompileBusy(true);\r\n        // sass.compile(style!, (result: any) => {\r\n        //     setCompileBusy(false);\r\n        //     console.log(result)\r\n        //     if (result.status === 1) {\r\n        //         setError(result)\r\n        //     }\r\n\r\n        //     if (result.text) {\r\n        //         setResultStyle(result.text);\r\n        //         //localStorage.setItem(\"css\", JSON.stringify(result.text));\r\n        //         setError(null);\r\n        //         if (callback!) {\r\n        //             callback();\r\n        //         }\r\n        //     }\r\n        // })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n                <ThemeName\r\n                    name={themeName}\r\n                    onChange={(value: string) => { props.onChange(value) }}\r\n                />\r\n\r\n                {Object.keys(Variables).map((item: any) =>\r\n                    <VariableGroup\r\n                        key={item}\r\n                        GroupName={item}\r\n                        items={Variables[item]}\r\n                        onChange={(value: any, key: any) => {\r\n                            if (value == \"\") {\r\n                                delete btVariables[item][key]\r\n                                delete btHashVars[key]\r\n                            }\r\n                            else {\r\n                                btVariables[item][key] = { \"value\": value }\r\n                                btHashVars[key] = value;\r\n                            }\r\n                            afterValueChange();\r\n                        }}\r\n                    />\r\n                )\r\n                }\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n                <div className=\"form-group\">\r\n                    <TextFieldWithTimer\r\n                        type=\"textarea\"\r\n                        className=\"form-control default\"\r\n                        onChange={(value: any) => setCustomStyle(value)}\r\n                        placeholder={_(\"CUSTOM_STYLE_PLACEHOLDER\")}\r\n                        spellCehck={false}\r\n                    />\r\n                    {\r\n                        error?.message &&\r\n                        <div className=\"container pl-0 pr-0 mt-1\">\r\n                            <div className=\" alert alert-danger\">\r\n                                <button className=\"close\" onClick={() => setError(null)}>&times;</button>\r\n\r\n                                <h4>{_(\"SOMETHING_WENT_WRONG\")} 🤔</h4>\r\n                                <p style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    {_(\"COMPILE_ERROR_TXT\")}\r\n                                </p>\r\n\r\n                                <p>\r\n                                    {_(\"THIS_IS_ERROR_MESSAGE\")}\r\n                                    <code>{error.message}</code>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"mt-2 mb-2\">\r\n                        <textarea\r\n                            className=\"form-control default\"\r\n                            value={outputStyle}\r\n                            readOnly\r\n                            disabled\r\n                            placeholder={_(\"OUTPUT_STYLE_PLACEHOLDER\")}\r\n                            style={{ minHeight: \"200px\", wordWrap: \"inherit\" }}\r\n                            spellCheck={false}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Examples\r\n                    activeTab={activeTab}\r\n                    onClick={(i: any) => { setActiveTab(i); setHash() }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { InfoCircle, Pencil, Trash, X, Check, DropletHalf, CaretDown } from \"react-bootstrap-icons\";\r\nimport { InputGroupButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, InputGroup, CustomInput } from 'reactstrap';\r\nimport { SketchPicker } from \"react-color\";\r\nimport { getPhrase as _ } from '../shared';\r\n\r\nexport default function ConfigAttribute(props: any) {\r\n    const [value, setValue] = useState<string>(\"\");\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [type, setType] = useState<string>(\"\");\r\n    const [Edit, setEdit] = useState<boolean>(false);\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\r\n    const [changedType, setChangedType] = useState<boolean>(false);\r\n    const [editable, setEditable] = useState<boolean>(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setType(props.type);\r\n    }, [props.type]);\r\n\r\n    useEffect(() => {\r\n        if (props.name) {\r\n            setName(props.name);\r\n        }\r\n    }, [props.name]);\r\n\r\n    useEffect(() => {\r\n        if (props.value) {\r\n            setValue(props.value);\r\n        }\r\n        else {\r\n            setValue(\"\");\r\n        }\r\n        CheckType(props.value);\r\n    }, [props.value])\r\n\r\n    useEffect(() => {\r\n        if (type !== \"color\") {\r\n            setShowColorPicker(false);\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (props.editable === true) {\r\n            setEditable(true)\r\n        }\r\n    }, [props.editable])\r\n\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n\r\n    const CheckType = (checkValue: string) => {\r\n        if (editable === true) {\r\n            if (String(checkValue) === \"true\" || String(checkValue) === \"false\") {\r\n                if (type !== \"boolean\") {\r\n                    props.onChange(\"type\", \"boolean\")\r\n                }\r\n            }\r\n            else {\r\n                if (changedType === false) {\r\n                    props.onChange(\"type\", \"\")\r\n                }\r\n            }\r\n\r\n            if (checkValue) {\r\n                if (checkValue.includes(\"#\") || checkValue.includes(\"rgb\")) {\r\n                    props.onChange(\"type\", \"color\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const getCheckboxChecked = (cbValue: string) => {\r\n        if (cbValue === \"false\") {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const changeType = (value: string) => {\r\n        if (editable === true) {\r\n            if (value === String(\"file\")) {\r\n                setValue(\"\");\r\n                props.onChange(\"value\", \"\")\r\n            }\r\n            else if (value === String(\"boolean\")) {\r\n                props.onChange(\"value\", String(true))\r\n            }\r\n            else if (value === String(\"color\")) {\r\n                props.onChange(\"value\", \"#000000\")\r\n            }\r\n\r\n            props.onChange(\"type\", value);\r\n\r\n            if (value !== \"\") {\r\n                setChangedType(true);\r\n            }\r\n            else {\r\n\r\n                setChangedType(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const submitName = () => {\r\n        setEdit(false);\r\n        props.onChange(\"name\", name)\r\n    }\r\n\r\n    const onChangeName = (e: any) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onChangeCheckbox = (e: any) => {\r\n        props.onChange(\"value\", String(e.target.checked))\r\n    }\r\n\r\n    const onChangeValue = (e: any) => {\r\n        props.onChange(\"value\", e.target.value)\r\n    }\r\n\r\n    const onChangeFile = (e: any) => {\r\n        props.onChange(\"value\", e.target.files[0].name)\r\n    }\r\n\r\n    const deleteAttribute = () => {\r\n        props.onChange(\"delete\", \"\")\r\n    }\r\n\r\n    const onKey = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            submitName();\r\n        }\r\n    }\r\n\r\n    const isDisabled = () => {\r\n        if (editable === true) {\r\n            return false\r\n        }\r\n        else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-5 d-flex align-items-center\">\r\n                    <button className=\"btn btn-danger mr-1\" title=\"Löschen\" onClick={() => deleteAttribute()} disabled={isDisabled()}>\r\n                        <Trash />\r\n                    </button>\r\n                    <button className=\"btn btn-primary mr-3\" title=\"Name ändern\" onClick={() => setEdit(true)} disabled={isDisabled()}>\r\n                        <Pencil />\r\n                    </button>\r\n                    <span className=\"mr-1\" title={props.description}>\r\n                        <InfoCircle className=\"text-info mr-1\" />\r\n                    </span>\r\n                    {Edit === false ?\r\n                        <p className=\"mb-0\">{name}</p>\r\n                        :\r\n                        <div className=\"input-group input-group-lg\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                onChange={onChangeName}\r\n                                value={name}\r\n                                onKeyPress={onKey}\r\n                            />\r\n\r\n                            <div className=\"input-group-append\">\r\n                                <button\r\n                                    className=\"btn btn-outline-primary\"\r\n                                    onClick={() => submitName()}\r\n                                >\r\n                                    <span><Check /></span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-outline-secondary\"\r\n                                    onClick={() => { setEdit(false); setName(props.name) }}\r\n                                >\r\n                                    <span><X /></span>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"col\">\r\n                    <InputGroup>\r\n                        {type === \"file\" ?\r\n                            <div className=\"custom-file\">\r\n                                <CustomInput\r\n                                    {...props}\r\n                                    onDoubleClick={() => { setValue(props.default) }}\r\n                                    onChange={onChangeFile}\r\n                                    type=\"file\"\r\n                                    value={value}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <input\r\n                                className=\"form-control default\"\r\n                                onChange={onChangeValue}\r\n                                onDoubleClick={() => { setValue(props.default) }}\r\n                                placeholder={`/* ${props.default} */`}\r\n                                value={value}\r\n                                aria-describedby=\"emailHelp\"\r\n                            />\r\n\r\n\r\n                        }\r\n                        {type === \"boolean\" &&\r\n                            <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={getCheckboxChecked(value)}\r\n                                        onChange={onChangeCheckbox}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {type === \"color\" &&\r\n                            <div className=\"input-group-append\">\r\n                                <button\r\n                                    className=\"btn btn-outline-secondary\"\r\n                                    onClick={() => setShowColorPicker(!showColorPicker)}\r\n                                >\r\n                                    <span ><DropletHalf /></span>\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        {editable === true &&\r\n                            <InputGroupButtonDropdown addonType=\"append\" isOpen={dropdownOpen} toggle={toggle} >\r\n                                <DropdownToggle caret>\r\n                                    Type\r\n                            </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem onClick={() => changeType(\"\")}>{_(\"TEXT\")}</DropdownItem>\r\n                                    <DropdownItem onClick={() => changeType(\"file\")}>{_(\"FILE\")}</DropdownItem>\r\n                                    <DropdownItem onClick={() => changeType(\"color\")}>{_(\"COLOR\")}</DropdownItem>\r\n                                    <DropdownItem onClick={() => changeType(\"boolean\")}>{_(\"BOOLEAN\")}</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </InputGroupButtonDropdown >\r\n                        }\r\n\r\n                    </InputGroup>\r\n                </div>\r\n\r\n                <div className=\"offset-sm-1 col-sm-10 mb-2 d-flex justify-content-end\">\r\n                    {showColorPicker === true &&\r\n                        <SketchPicker\r\n                            color={value}\r\n                            onChangeComplete={(color: any) => setValue(color.hex)}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Plus } from \"react-bootstrap-icons\";\r\nimport { getPhrase as _ } from '../shared';\r\n\r\nimport ConfigAttribute from './ConfigAttribute';\r\n\r\n\r\nexport default function ConfigSection(props: any) {\r\n\r\n    const [attribute, setAttribute] = useState<any>([]);\r\n    const [change, setChange] = useState<boolean>(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setAttribute(props.attribute);\r\n    }, [props.attribute])\r\n\r\n    const onChangeValue = (attrb: string, value: string, i: number) => {\r\n        if (attrb === \"delete\") {\r\n            attribute.splice(i, 1);\r\n            setChange(!change)\r\n        }\r\n        else if (attrb === \"value\") {\r\n            if (value !== \"\") {\r\n                attribute[i].value = value;\r\n            }\r\n            else {\r\n                delete attribute[i].value;\r\n            }\r\n            setChange(!change)\r\n        }\r\n        else {\r\n            attribute[i][attrb] = value;\r\n            setChange(!change)\r\n        }\r\n    }\r\n\r\n    const AddAttribute = () => {\r\n        var temp = {\r\n            \"name\": \"Attribute\",\r\n            \"type\": \"\",\r\n            \"description\": \"\",\r\n            \"default\": \"\",\r\n            \"editable\": true\r\n        }\r\n        attribute.push(temp);\r\n        setChange(!change)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.selected === props.name &&\r\n                <div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"col-9\">\r\n                            <div className=\"card pl-3 pr-3 pt-4 mt-3\">\r\n                                {attribute.length > 0 ?\r\n                                    attribute.map((item: any, i: number) =>\r\n                                        <ConfigAttribute\r\n                                            key={i}\r\n                                            name={item.name}\r\n                                            default={item.default}\r\n                                            value={item.value}\r\n                                            type={item.type}\r\n                                            editable={item?.editable}\r\n                                            onChange={(attrb: string, value: string) => { onChangeValue(attrb, value, i) }}\r\n                                        />\r\n                                    )\r\n                                    :\r\n                                    <p className=\"text-center\">{_(\"NO_ATTRIBUTES\")}</p>\r\n\r\n                                }\r\n                                <button className=\"btn btn-outline-primary mb-3 mt-3\" onClick={() => AddAttribute()}><Plus /> {_(\"ADD\")}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, InputGroupButtonDropdown } from 'reactstrap';\r\nimport ConfigSection from './ConfigSection';\r\nimport { getPhrase as _ } from '../shared';\r\n\r\nexport default function ConfigHome(props: any) {\r\n    const [attribute, setAttribute] = useState<any>({});\r\n    const [selected, setSelected] = useState<string>(\"none\");\r\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\r\n    const [values, setValues] = useState<any>();\r\n    const [change, setChange] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(attribute).length === 0) {\r\n            SetUp();\r\n        }\r\n    }, [attribute])\r\n\r\n    useEffect(() => {\r\n        getAttributeTemplate(() => {\r\n\r\n        })\r\n    }, [props.user && props.access_token]);\r\n\r\n    useEffect(() => {\r\n        var ls = String(localStorage.getItem(\"template\"));\r\n\r\n        if (ls !== \"null\" && props.user !== undefined) {\r\n            setSelected(ls);\r\n        }\r\n        else {\r\n            setSelected(\"none\");\r\n        }\r\n\r\n    }, [props])\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const SetUp = async () => {\r\n        await setAttribute({ \"none\": [] });\r\n        getAttributeTemplate(() => {\r\n            setStartValue();\r\n        })\r\n    }\r\n\r\n\r\n    const getAttributeTemplate = async (callback: any) => {\r\n        if (props.user && props.access_token) {\r\n            const res = await fetch(`${(window as any).proxy}${props.user.organizations_url}`, {\r\n                headers: {\r\n                    Authorization: `token ${props.access_token}`,\r\n                    method: \"get\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            await res\r\n                .json()\r\n                .then(async org => {\r\n                    for (var i = 0; i < org.length; i++) {\r\n                        var company = org[i].login;\r\n                        var repo = await fetch(`${(window as any).proxy}https://api.github.com/repos/${org[i].login}/themify-library/git/trees/main`, {\r\n                            headers: {\r\n                                Authorization: `token ${props.access_token}`,\r\n                                method: \"get\",\r\n                                \"Content-Type\": \"application/json\"\r\n                            }\r\n                        })\r\n\r\n                        await repo\r\n                            .json()\r\n                            .then(async files => {\r\n                                await files.tree.findIndex(async (item: any) => {\r\n                                    if (item.path === \"themify-library-template.json\") {\r\n                                        var file = await fetch(`${(window as any).proxy}${item.url}`, {\r\n                                            headers: {\r\n                                                Authorization: `token ${props.access_token}`,\r\n                                                method: \"get\",\r\n                                                \"Content-Type\": \"application/json\"\r\n                                            }\r\n                                        })\r\n\r\n                                        await file\r\n                                            .json()\r\n                                            .then((data) => {\r\n                                                var attr = JSON.parse(atob(data.content));\r\n                                                attribute[company] = attr;\r\n                                                setChange(!change);\r\n                                            }\r\n                                            );\r\n                                    }\r\n                                })\r\n                            })\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    const setStartValue = () => {\r\n        var item = {};\r\n        var add = [];\r\n        var appSettings = {};\r\n\r\n        for (var i = 0; i < Object.keys(attribute).length; i++) {\r\n            var temp = {\r\n                \"name\": Object.keys(attribute)[i],\r\n                \"value\": \"\",\r\n                \"description\": \"\",\r\n            }\r\n            add.push(temp);\r\n        }\r\n        var _declaration = {\r\n            \"_attributes\": {\r\n                \"version\": \"1.0\",\r\n                \"encoding\": \"utf-8\"\r\n            }\r\n        }\r\n        appSettings = { add };\r\n        item = { appSettings, _declaration };\r\n        setValues(item);\r\n    }\r\n\r\n    const setTemplate = (name: string) => {\r\n        setSelected(name);\r\n\r\n        if (name !== \"none\") {\r\n            localStorage.setItem(\"template\", name);\r\n        }\r\n        else {\r\n            localStorage.removeItem(\"template\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <InputGroupButtonDropdown addonType=\"append\" isOpen={dropdownOpen} toggle={toggle} >\r\n                    <DropdownToggle caret color=\"outline-primary\">\r\n                        {_(\"TEMPLATE\")}: {selected}\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        {\r\n                            Object.keys(attribute).map((item: any) =>\r\n                                <DropdownItem onClick={() => setTemplate(item)}>{item}</DropdownItem>\r\n                            )\r\n                        }\r\n                    </DropdownMenu>\r\n                </InputGroupButtonDropdown >\r\n            </div>\r\n            {\r\n                Object.keys(attribute).map((item: any, i: number) =>\r\n                    <ConfigSection\r\n                        keys={i}\r\n                        attribute={attribute[item]}\r\n                        name={item}\r\n                        selected={selected}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { Utilities } from 'blue-react';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from \"reactstrap\";\r\nimport { getPhrase as _ } from '../shared';\r\n\r\nexport default function FileModal(props: any) {\r\n    const [organizations, setOrganizations] = useState<any>([]);\r\n    const [account, setAccount] = useState<string>(\"\");\r\n    const [load, setLoad] = useState<boolean>(false);\r\n    const [themeName, setThemeName] = useState<string>(\"\");\r\n    const [contentConfig, setContentConfig] = useState<string>(\"\");\r\n    const [contentTheme, setContentTheme] = useState<string>(\"\");\r\n\r\n\r\n    let files: any = [];\r\n\r\n    useEffect(() => {\r\n        if (props.user && props.access_token) {\r\n            getOrganizations();\r\n        }\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        if (props.themeName) {\r\n            setThemeName(props.themeName);\r\n        }\r\n    }, [props.themeName])\r\n\r\n    useEffect(() => {\r\n        if (props.account) {\r\n            setAccount(props.account);\r\n        }\r\n    }, [props.account])\r\n\r\n    useEffect(() => {\r\n        if (props.user && props.keys === 0) {\r\n            setAccount(props.user.login);\r\n        }\r\n    }, [props.user])\r\n\r\n    useEffect(() => {\r\n        if (contentConfig === \"\") {\r\n            setContentConfig(props.contentConfig);\r\n        }\r\n    }, [props.contentConfig])\r\n\r\n    useEffect(() => {\r\n        if (contentTheme === \"\") {\r\n            setContentTheme(props.contentTheme);\r\n        }\r\n    }, [props.contentTheme])\r\n\r\n\r\n\r\n    const submit = async () => {\r\n        await setLoad(true);\r\n        createTheme();\r\n    }\r\n\r\n    const getOrganizations = async () => {\r\n        const res = await fetch(`${(window as any).proxy}${props.user.organizations_url}`, {\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        await res\r\n            .json()\r\n            .then(async org => {\r\n                setOrganizations(org)\r\n            })\r\n    }\r\n\r\n    const putFile = async (body: string, file: string) => {\r\n        let response = await fetch(`https://api.github.com/repos/${account}/Themify_DB/contents/Library/${themeName}/${file}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/vnd.github.v3+json\"\r\n            },\r\n            body: body\r\n\r\n        });\r\n        let res = await response.json()\r\n    }\r\n\r\n    const editFile = async () => {\r\n        let shaConfig = files.find((o: any) => o.name === \"AppSettings.config\");\r\n        let shaTheme = files.find((o: any) => o.name === \"Theme.json\");\r\n        let config = {\r\n            \"content\": btoa(contentConfig),\r\n            \"message\": `Update ${themeName} config`,\r\n            \"branch\": \"main\",\r\n            \"sha\": shaConfig.sha\r\n        }\r\n\r\n        let json = {\r\n            \"content\": btoa(contentTheme),\r\n            \"message\": `Update ${themeName} css`,\r\n            \"branch\": \"main\",\r\n            \"sha\": shaTheme.sha\r\n        }\r\n\r\n        await putFile(JSON.stringify(config), \"AppSettings.config\");\r\n        await putFile(JSON.stringify(json), \"Theme.json\");\r\n\r\n    }\r\n\r\n    const checkFileExist = async () => {\r\n        let response = await fetch(`https://api.github.com/repos/${account}/Themify_DB/contents/Library/${themeName}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/vnd.github.v3+json\"\r\n            }\r\n\r\n        });\r\n\r\n        let res = await response.json();\r\n        if (response.status === 404) {\r\n            return false;\r\n        }\r\n        else {\r\n            files = res;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const FilesToGithub = async () => {\r\n        if (await checkFileExist() === true) {\r\n            editFile();\r\n        }\r\n        else {\r\n            try {\r\n                let config = {\r\n                    \"content\": btoa(contentConfig),\r\n                    \"message\": `Add ${themeName} config`,\r\n                    \"branch\": \"main\"\r\n                }\r\n\r\n                let json = {\r\n                    \"content\": btoa(contentTheme),\r\n                    \"message\": `Add ${themeName} css`,\r\n                    \"branch\": \"main\"\r\n                }\r\n\r\n                await putFile(JSON.stringify(config), \"AppSettings.config\");\r\n                await putFile(JSON.stringify(json), \"Theme.json\");\r\n                Utilities.showSuccess();\r\n                setTimeout(Utilities.hideSuccess, 2000);\r\n\r\n\r\n\r\n            }\r\n            catch {\r\n                Utilities.setAlertMessage(\"Fehler\", \"warning\", true, \"Es konnte kein neues Theme erstellt werden\")\r\n            }\r\n        }\r\n\r\n        if (props.keys === 0) {\r\n            props.onChange(themeName, account);\r\n        }\r\n        else if (props.keys === 1) {\r\n            props.onChange();\r\n        }\r\n    }\r\n\r\n    const onChangeAccount = (value: string) => {\r\n        setAccount(value);\r\n    }\r\n\r\n    const onChangeThemeName = (e: any) => {\r\n        setThemeName(e.target.value);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setLoad(false);\r\n        props.onChange()\r\n    }\r\n\r\n    const createRepo = async () => {\r\n        var repo = {\r\n            \"name\": \"Themify_DB\",\r\n            \"description\": \"The DB for Themify\",\r\n            \"homepage\": \"https://github.com\",\r\n            \"private\": true\r\n        }\r\n\r\n        if (props.user.login === account) {\r\n            let response = await fetch(`https://api.github.com/user/repos`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `token ${props.access_token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(repo)\r\n\r\n            });\r\n\r\n            let res = await response.json();\r\n        }\r\n        else {\r\n            let response = await fetch(`https://api.github.com/orgs/${account}/repos`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `token ${props.access_token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(repo)\r\n\r\n            });\r\n\r\n            let res = await response.json();\r\n        }\r\n\r\n    }\r\n\r\n    const CheckForDBRepo = async () => {\r\n        let response = await fetch(`https://api.github.com/repos/${account}/Themify_DB`, {\r\n            method: \"Get\",\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n\r\n        });\r\n        let res = await response.json()\r\n        if (response.status === 200) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const createTheme = async () => {\r\n\r\n        if (themeName !== \"\") {\r\n            if (account !== \"\") {\r\n                if (await CheckForDBRepo() === false) {\r\n                    if (window.confirm(_(\"NO_DATABASE\"))) {\r\n                        await createRepo();\r\n                        await FilesToGithub();\r\n                    }\r\n                }\r\n                else {\r\n                    await FilesToGithub();\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Bitte account angeben\")\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Bitte ein Name eingeben\")\r\n        }\r\n        await setLoad(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.open}>\r\n                <ModalHeader>\r\n                    {props.title}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <input className=\"form-control default mb-3\" type=\"text\" placeholder=\"Name\" value={themeName} onChange={onChangeThemeName} />\r\n                    {props.user ?\r\n                        <UncontrolledButtonDropdown>\r\n                            <DropdownToggle caret color=\"outline-secondary\">\r\n                                {_(\"ACCOUNT\")}: {account}\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem onClick={() => onChangeAccount(props.user.login)}><img className=\"avatar mr-2\" alt={props.user?.login} src={props.user?.avatar_url} />{props.user?.login}</DropdownItem>\r\n                                {\r\n                                    organizations.map((item: any) =>\r\n                                        <DropdownItem onClick={() => onChangeAccount(item.login)}><img className=\"avatar mr-2\" alt={item.login} src={item.avatar_url} />{item.login}</DropdownItem>\r\n                                    )\r\n                                }\r\n                            </DropdownMenu>\r\n                        </UncontrolledButtonDropdown>\r\n                        :\r\n                        <p>{_(\"NOT_ONLINE_STORAGE\")}</p>\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    {load === false ?\r\n                        <div>\r\n                            <button className=\"btn btn-outline-danger mr-2\" onClick={() => cancel()}>{_(\"CANCEL\")}</button>\r\n                            <button className=\"btn btn-outline-primary\" onClick={() => createTheme()}>{_(\"SUBMIT\")}</button>\r\n                        </div>\r\n                        :\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                            <span className=\"sr-only\"></span>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </ModalFooter>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Page, Header, HeaderTitle, Body, Actions, MenuItem, DropdownMenuItem, Utilities } from \"blue-react\";\r\nimport { BoxArrowUp, Share, FileEarmarkPlus, Gear, Brush, FileZip, CloudUpload } from \"react-bootstrap-icons\"\r\n\r\nimport { appLogo, appTitle, getPhrase as _ } from \"../shared\";\r\nimport ThemesHome from \"../components/ThemesHome\";\r\nimport ConfigHome from \"../components/ConfigHome\";\r\nimport FileModal from \"../components/FileModal\";\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n\r\n\r\nfunction HomePage(props: any) {\r\n\r\n    const [SelectedThemeConfig, setSelectedThemeConfig] = useState<number>(1);\r\n    const [modalNew, setModalNew] = useState<boolean>(false);\r\n    const [modalSave, setModalSave] = useState<boolean>(false);\r\n    const [themeName, setThemeName] = useState<string>(\"\");\r\n    const [account, setAccount] = useState<string>(\"\");\r\n    const [valueConfig, setValueConfig] = useState<string>(\"\");\r\n    const [valueTheme, setValueTheme] = useState<string>(\"\");\r\n\r\n    let files: any = [];\r\n\r\n    useEffect(() => {\r\n        if (themeName === \"\") {\r\n            let hash = window.location.hash;\r\n            console.log(hash)\r\n            if (hash) {\r\n                let hashObject = JSON.parse(decodeURIComponent(hash.replace(\"#/home/\", \"\")));\r\n                console.log(hashObject)\r\n                setThemeName(hashObject.name);\r\n                setAccount(hashObject.account)\r\n            }\r\n            else {\r\n                setThemeName(\"Theme Name\");\r\n            }\r\n            //Example from Themify (1)\r\n            //console.log(JSON.parse(decodeURIComponent(`%7B\"name\"%3A\"hallo\"%2C\"btHashVars\"%3A%7B\"%24theme\"%3A\"%23923434\"%2C\"%24fluent-halo-color\"%3A\"white\"%2C\"%24shimmering\"%3A\".9\"%7D%7D`)))\r\n\r\n        }\r\n\r\n    }, [themeName])\r\n\r\n\r\n    const getClassSelectedThemeConfig = (value: number) => {\r\n        if (value === SelectedThemeConfig) {\r\n            return \"btn-primary\"\r\n        }\r\n        else {\r\n            return \"btn-outline-primary\"\r\n        }\r\n    }\r\n\r\n\r\n    const saveFileToZip = async (org: any) => {\r\n\r\n        let array: any;\r\n\r\n        const res = await fetch(`${(window as any).themify_proxy}https://api.github.com/repos/${org}/Themify_DB/contents/Library/${themeName}`, {\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        await res\r\n            .json()\r\n            .then(res => {\r\n                array = res;\r\n            })\r\n\r\n        var zip = new JSZip();\r\n\r\n        let arr1: any = [];\r\n        let arr2: any = [];\r\n        let folder: any;\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n\r\n            if (array[i].type === \"dir\") {\r\n\r\n                folder = zip.folder(array[i].name);\r\n\r\n                const response = await fetch(`${(window as any).themify_proxy}https://api.github.com/repos/${org}/Themify_DB/contents/${array[i].path}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Accept\": \"application/json\",\r\n                        \"Authorization\": `token ${props.access_token}`\r\n                    }\r\n                })\r\n                    .then((res: any) => {\r\n                        return res.json()\r\n                    })\r\n                    .then((resp: any) => {\r\n                        if (resp.length >= 0) {\r\n                            for (let a = 0; a < resp.length; a++) {\r\n                                arr1.push(resp[a]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n            }\r\n            else {\r\n\r\n                const response = await fetch(`${(window as any).themify_proxy}https://api.github.com/repos/${org}/Themify_DB/contents/${array[i].path}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Accept\": \"application/json\",\r\n                        \"Authorization\": `token ${props.access_token}`\r\n                    }\r\n                })\r\n                    .then((res: any) => {\r\n                        return res.json()\r\n                    })\r\n                    .then((resp: any) => {\r\n                        arr2.push(resp);\r\n                    })\r\n\r\n            }\r\n        }\r\n\r\n        for (let k = 0; k < arr1.length; k++) {\r\n\r\n            const get = await fetch(`${(window as any).themify_proxy}https://api.github.com/repos/${org}/Themify_DB/contents/${arr1[k].path}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": `token ${props.access_token}`\r\n                }\r\n            })\r\n                .then((res: any) => {\r\n                    return res.json();\r\n                })\r\n                .then((response: any) => {\r\n                    folder.file(response.name, atob(response.content))\r\n                })\r\n\r\n        }\r\n\r\n        for (let j = 0; j < arr2.length; j++) {\r\n\r\n            const get = await fetch(`${(window as any).themify_proxy}https://api.github.com/repos/${org}/Themify_DB/contents/${arr2[j].path}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": `token ${props.access_token}`\r\n                }\r\n            })\r\n                .then((res: any) => {\r\n                    return res.json();\r\n                })\r\n                .then((response: any) => {\r\n                    zip.file(response.name, atob(response.content))\r\n                })\r\n\r\n        }\r\n\r\n        if (Object.keys(zip.files).length > 1) {\r\n            await zip.generateAsync({ type: \"blob\" }).then((content: any) => {\r\n                saveAs(content, `${themeName}.zip`);\r\n            })\r\n        }\r\n    }\r\n\r\n    const putFile = async (body: string, file: string) => {\r\n        let response = await fetch(`https://api.github.com/repos/${account}/Themify_DB/contents/Library/${themeName}/${file}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/vnd.github.v3+json\"\r\n            },\r\n            body: body\r\n\r\n        });\r\n        let res = await response.json()\r\n    }\r\n\r\n    const editFile = async () => {\r\n        let shaConfig = files.find((o: any) => o.name === \"AppSettings.config\");\r\n        let shaTheme = files.find((o: any) => o.name === \"Theme.json\");\r\n        let config = {\r\n            \"content\": btoa(valueConfig),\r\n            \"message\": `Update ${themeName} config`,\r\n            \"branch\": \"main\",\r\n            \"sha\": shaConfig.sha\r\n        }\r\n\r\n        let json = {\r\n            \"content\": btoa(valueTheme),\r\n            \"message\": `Update ${themeName} css`,\r\n            \"branch\": \"main\",\r\n            \"sha\": shaTheme.sha\r\n        }\r\n\r\n        await putFile(JSON.stringify(config), \"AppSettings.config\");\r\n        await putFile(JSON.stringify(json), \"Theme.json\");\r\n\r\n        Utilities.finishLoading();\r\n        Utilities.showSuccess();\r\n        setTimeout(Utilities.hideSuccess, 2000);\r\n\r\n    }\r\n\r\n\r\n    const changeNewModel = (themename: string, account: string) => {\r\n        if (themename && account) {\r\n            var url = {\r\n                name: themename,\r\n                account: account\r\n            }\r\n\r\n            window.location.hash = \"/home/\" + encodeURIComponent(JSON.stringify(url));\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            setModalNew(!modalNew)\r\n        }\r\n    }\r\n\r\n    const checkFileExist = async () => {\r\n        let response = await fetch(`https://api.github.com/repos/${account}/Themify_DB/contents/Library/${themeName}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/vnd.github.v3+json\"\r\n            }\r\n\r\n        });\r\n\r\n        let res = await response.json();\r\n        if (response.status === 404) {\r\n            return false;\r\n        }\r\n        else {\r\n            files = res;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const save = async () => {\r\n        Utilities.startLoading();\r\n        if (account !== \"\" && themeName !== \"\" && await checkFileExist() === true) {\r\n            editFile();\r\n        }\r\n        else {\r\n            Utilities.finishLoading();\r\n            setModalSave(!modalSave);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Page hasActions={true} >\r\n            <Header>\r\n                <HeaderTitle logo={appLogo} appTitle={appTitle}>{_(\"CUSTOMIZER\")}</HeaderTitle>\r\n            </Header>\r\n\r\n            <Actions break=\"xl\">\r\n                {/*  <MenuItem\r\n                    icon={<BoxArrowInDown />}\r\n                    label={_(\"IMPORT_CONFIG\")}\r\n              />*/}\r\n                <DropdownMenuItem\r\n                    icon={<BoxArrowUp />}\r\n                    label={_(\"EXPORT\")}\r\n                >\r\n                    <MenuItem\r\n                        icon={<FileZip />}\r\n                        label={_(\"EXPORT_ZIP\")}\r\n                        onClick={() => saveFileToZip(props.user.login)}\r\n                    />\r\n                </DropdownMenuItem>\r\n                <MenuItem\r\n                    icon={<CloudUpload />}\r\n                    label={_(\"SAVE\")}\r\n                    onClick={() => save()}\r\n                />\r\n                <MenuItem\r\n                    icon={<CloudUpload />}\r\n                    label={_(\"SAVE_AS\")}\r\n                    onClick={() => setModalSave(!modalSave)}\r\n                />\r\n                <MenuItem\r\n                    icon={<Share />}\r\n                    label={_(\"SHARE_THIS_CONFIG\")}\r\n                />\r\n                <MenuItem\r\n                    icon={<FileEarmarkPlus />}\r\n                    label={_(\"NEW\")}\r\n                    onClick={() => setModalNew(!modalNew)}\r\n                />\r\n            </Actions>\r\n\r\n            <Body className=\"pl-5 pr-5\">\r\n                <div id=\"homePage\">\r\n                    <div className=\"row mt-3 d-flex justify-content-center\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                            <button type=\"button\" className={\"btn \" + getClassSelectedThemeConfig(0)} onClick={() => { setSelectedThemeConfig(0) }}><Brush /> {_(\"THEME\")}</button>\r\n                            <button type=\"button\" className={\"btn \" + getClassSelectedThemeConfig(1)} onClick={() => { setSelectedThemeConfig(1) }}><Gear /> {_(\"CONFIG\")}</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        {SelectedThemeConfig === 0 ?\r\n                            <ThemesHome\r\n                                name={themeName}\r\n                                onChange={(value: string) => setThemeName(value)}\r\n                                defaultCSS={props.defaultCSS}\r\n                            />\r\n                            :\r\n                            <ConfigHome\r\n                                user={props.user}\r\n                                access_token={props.access_token}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <FileModal\r\n                    keys={0}\r\n                    open={modalNew}\r\n                    onChange={(themename: string, account: string) => changeNewModel(themename, account)}\r\n                    user={props.user}\r\n                    access_token={props.access_token}\r\n                    title={_(\"CREATE_NEW_THEME\")}\r\n                />\r\n                <FileModal\r\n                    keys={1}\r\n                    open={modalSave}\r\n                    user={props.user}\r\n                    onChange={() => setModalSave(!modalSave)}\r\n                    access_token={props.access_token}\r\n                    title={_(\"SAVE_AS\")}\r\n                    contentConfig=\"test\"\r\n                    contentTheme=\"test22\"\r\n                    themeName={themeName}\r\n                    account={account}\r\n                />\r\n            </Body>\r\n        </Page >\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nfunction Icon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fillRule=\"evenodd\"\r\n      strokeLinejoin=\"round\"\r\n      strokeMiterlimit=\"2\"\r\n      clipRule=\"evenodd\"\r\n      viewBox=\"0 0 404 404\"\r\n    >\r\n      <g transform=\"translate(-3843.74 -690)\">\r\n        <g transform=\"matrix(.97588 0 0 .97635 3299 699.358)\">\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M558.205 -9.585H971.268V403.28000000000003H558.205z\"\r\n          ></path>\r\n          <clipPath id=\"_clip1\">\r\n            <path d=\"M558.205 -9.585H971.268V403.28000000000003H558.205z\"></path>\r\n          </clipPath>\r\n          <g clip-path=\"url(#_clip1)\">\r\n            <g transform=\"matrix(1.02472 0 0 1.02423 558.153 -9.636)\">\r\n              <path\r\n                fill=\"#151515\"\r\n                d=\"M403.15 88.693C403.15 39.742 363.408 0 314.457 0H88.693C39.742 0 0 39.742 0 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"\r\n              ></path>\r\n              <clipPath id=\"_clip2\">\r\n                <path d=\"M403.15 88.693C403.15 39.742 363.408 0 314.457 0H88.693C39.742 0 0 39.742 0 88.693v225.764c0 48.951 39.742 88.693 88.693 88.693h225.764c48.951 0 88.693-39.742 88.693-88.693V88.693z\"></path>\r\n              </clipPath>\r\n              <g clip-path=\"url(#_clip2)\">\r\n                <path fill=\"url(#_Radial3)\" d=\"M0 0H403.15V403.15H0z\"></path>\r\n              </g>\r\n              <path\r\n                fill=\"#fff\"\r\n                fillOpacity=\"0.8\"\r\n                fillRule=\"nonzero\"\r\n                d=\"M3057.16 1460.5c78.4 86.5.1 189.5-104.5 189.5h-180.8c54.2-19.9 69-56.5 81.7-95.8 10.3-31.9 19.2-65.6 46.7-93.7 36.4-37.3 108-53.9 156.9 0zm275.7 40.9c91.2-90.9 135.4-207.5 139.7-320.7-24.2 32.9-49.1 65-75.5 96.3-6.6 7.9-13.4 15.8-20.2 23.6-1.1 14.4-11.9 26.1-25.8 28.8-2.3 2.5-4.6 5.1-6.9 7.6.5 2.9.8 5.9.8 9 0 9.9-3 19.1-8.1 26.7 5 5.7 8.1 13.1 8.1 21.3 0 17.7-14.3 32-32 32-15 0-27.7-10.4-31.1-24.4l-8.4 8.4c-26.3 26-52.4 51.5-82.9 72.6-3.6 2.5-7.5 4.2-11.5 5.1 3.7 5.2 5.9 11.6 5.9 18.5 0 17.6-14.3 32-32 32-1.4 0-2.8-.1-4.1-.3-3.3 9.4-12.2 16.1-22.6 16.1-2.3 0-4.4-.3-6.5-.9-.7 5.2-1.8 10.4-3.2 15.6-7.6 27.8-23.4 51.1-44 69.2 91.8-18.8 184.7-61.1 260.3-136.5zm-339.4-106.9c.4-2.1 1-4.2 1.8-6.3 4.4-11.6 9.5-22.9 15.4-33.8 3.3-6 8.2-10.6 13.9-13.5 0-6.4 2-12.7 6-18.3 21.3-30 47-55.7 73.1-81.5 42.9-42.4 87.1-83.6 133.2-122.5 14.8-12.5 29.8-24.8 44.9-36.8-.5-2.3-.8-4.7-.8-7.2 0-17.7 14.3-32 32-32 5.4 0 10.6 1.3 15 3.7 7.9-5.9 15.8-11.7 23.8-17.5 26.6-19.4 53.5-38.3 80.5-57.3-26.8-58-66.4-107.8-117.1-143.2-189.9-132.4-497.9-96.1-634.3 175.6-121.8 242.5 93.9 145.4 111.1 251.6 20.7 126.9-273.4 142.5-91.2 320.5 15.9 15.5 38.9 29.6 67.1 41.1 33.8-14.7 44-37.8 55.3-72.7 13.1-40.6 23.3-74.7 54.2-106.3 24.6-25.2 59.3-41.2 94.4-43.7 7.4-.6 14.6-.5 21.7.1zm45.4-24.9c-5.1 9.5-9.7 19.4-13.7 29.9 20.7 7.8 39.5 20.6 55.3 37.8 13.8 15.2 24.9 32.1 32.1 50.3 10.9-4 21.2-8.6 30.9-13.7-8.3-20-20.9-39.8-38.2-58.8-19.3-20.9-42-36-66.4-45.5zm521.5-408.8c-2.1-2.1-4.2-4.2-6.3-6.2-10.3-10.2-26.2-11.5-38-3-142.4 101.6-231.2 155.4-389.9 312.3-24.6 24.3-49.2 48.7-69.5 77.2 26.9 11.3 52 28.5 73.4 51.8 18.7 20.4 32.6 41.8 42.3 63.4 29.1-20.1 53.8-44.6 78.6-69 158.7-157 209.6-248.1 312.4-388.9 8.6-11.7 7.3-27.5-3-37.6zm-562.9 276.5c-37.2 37.8-98 38.3-135.8 1.2-37.8-37.2-38.3-98-1.2-135.8 37.2-37.8 98-38.3 135.8-1.2 37.8 37.2 38.3 98 1.2 135.8zm187.5-307.3c0-5.7 1-11.1 2.8-16.1-.9.1-1.9.1-2.8.1-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32c0 .9 0 1.9-.1 2.8 5-1.8 10.4-2.8 16.1-2.8 9.9 0 19.1 3 26.7 8.1 5.7-5 13.1-8.1 21.3-8.1 17.7 0 32 14.3 32 32s-14.3 32-32 32c-.9 0-1.8 0-2.7-.1-.6 1.6-1.2 3.2-2 4.8 2.9 2.9 4.7 6.9 4.7 11.3 0 2.3-.5 4.6-1.4 6.6.9 3 1.4 6.1 1.4 9.4 0 17.7-14.3 32-32 32s-32-14.3-32-32c0-.9 0-1.8.1-2.7-1.6-.6-3.2-1.2-4.8-2-2.9 2.9-6.9 4.7-11.3 4.7-8.8 0-16-7.2-16-16 0-4.4 1.8-8.4 4.7-11.3-3-6.3-4.7-13.3-4.7-20.7zm-175.8-66.8c0-17.7 14.3-32 32-32 17.6 0 32 14.3 32 32 0 1.4-.1 2.7-.3 4.1 9.4 3.2 16.1 12.1 16.1 22.6 0 13.2-10.7 23.9-23.9 23.9-11.4 0-21-8-23.4-18.6h-.5c0 17.6-14.4 32-32 32-17.7 0-32-14.4-32-32-17.7 0-32-14.4-32-32 0-12.7 7.3-23.6 17.9-28.8v-.4c0-8.8 7.1-16 16-16 8.8 0 16 7.2 16 16 0 .9-.1 1.7-.2 2.5 8.6 5.8 14.3 15.5 14.3 26.7z\"\r\n                transform=\"matrix(.25428 0 0 .25428 -573.975 -104.073)\"\r\n              ></path>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <defs>\r\n        <radialGradient\r\n          id=\"_Radial3\"\r\n          cx=\"0\"\r\n          cy=\"0\"\r\n          r=\"1\"\r\n          gradientTransform=\"translate(201.57 201.57) scale(201.57)\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop offset=\"0\" stopOpacity=\"0.2\"></stop>\r\n          <stop offset=\"1\" stopColor=\"#C2C2C1\" stopOpacity=\"0.2\"></stop>\r\n        </radialGradient>\r\n      </defs>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport ThemifyLogo from \"../icons/Themify\";\r\nimport { getPhrase as _ } from '../shared';\r\n\r\nexport default function LibraryNoLogin() {\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-10 col-md-8 col-lg-6 mx-auto mt-5 text-center\">\r\n            <div className=\"card shadow-lg\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"col-3 mx-auto\">\r\n                        <ThemifyLogo />\r\n                    </div>\r\n                    <h1> {_(\"THEMIFY/LIBRARY\")}</h1>\r\n                    {_(\"NEED_GITHUB_LOGIN\")}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\"\r\nimport { TrashFill } from \"react-bootstrap-icons\"\r\nimport { getPhrase as _ } from '../shared';\r\nimport { Utilities } from 'blue-react';\r\n\r\nexport default function ThemeItem(props: any) {\r\n    useEffect(() => {\r\n        if (delItems) {\r\n            del(delItems, props.username)\r\n        }\r\n    })\r\n\r\n    const [primary, setPrimary] = useState<string>(\"#ddd\")\r\n    const [delItems, setDelItems] = useState<any[]>()\r\n\r\n    const deleteFile = async (username: any, name: any) => {\r\n        const res = await fetch(`${(window as any).proxy}https://api.github.com/repos/${username}/Themify_DB/contents/Library/${name}`, {\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n\r\n        await res\r\n            .json()\r\n            .then((res: any) => {\r\n                setDelItems(res);\r\n            })\r\n    }\r\n\r\n    const del = async (res: any, username: any) => {\r\n        Utilities.startLoading();\r\n        for (let i = 0; i < res.length; i++) {\r\n            const dele = await fetch(`${(window as any).themify_proxy}delete?newUrl=https://api.github.com/repos/${username}/Themify_DB/contents/${res[i].path}&sha=${res[i].sha}&token=${props.access_token}`, {\r\n            })\r\n            await dele\r\n                .json()\r\n                .then((res: any) => {\r\n\r\n                })\r\n        }\r\n        window.location.reload();\r\n        Utilities.finishLoading();\r\n    }\r\n\r\n    return (\r\n        <div className=\"card mb-3 \" key={0}>\r\n            <div className=\"card-img-top\" style={{ height: \"60px\", backgroundColor: primary }} />\r\n            <div className=\"card-body\">\r\n                <h5>\r\n                    <a href=\"javacript:void(0)\" onClick={props.onSelect}>\r\n                        {props.name}\r\n                    </a>\r\n                </h5>\r\n                <button onClick={() => deleteFile(props.username, props.name)} className=\"btn btn-outline-danger mr-1\"><TrashFill /> Löschen</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport ThemeItem from './ThemeItem';\r\nimport { Utilities } from \"blue-react\";\r\nimport { getPhrase as _ } from '../shared';\r\n\r\n\r\nexport default function LibraryLogin(props: any) {\r\n\r\n    const [libraryItems, setLibraryItems] = useState<any[]>();\r\n    const [orgItems, setOrgItems] = useState<any[]>();\r\n\r\n    useEffect(() => {\r\n        if (props.user) {\r\n            getLibraryItems(props.user.login);\r\n            getOrgs(props.user.login);\r\n        }\r\n\r\n    }, [props.user])\r\n\r\n\r\n\r\n\r\n    const getLibraryItems = async (org: any) => {\r\n        Utilities.startLoading();\r\n        var TempItems: any = [];\r\n        var tree: any;\r\n\r\n\r\n\r\n        const res = await fetch(`${(window as any).proxy}https://api.github.com/repos/${org}/Themify_DB/git/trees/main`, {\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n\r\n        await res\r\n            .json()\r\n            .then((res: any) => {\r\n                tree = res.tree\r\n            })\r\n            .catch((e: any) => {\r\n                console.log(e);\r\n            })\r\n\r\n        for (var i = 0; i < tree?.length; i++) {\r\n            const res = await fetch(`${(window as any).proxy}${tree[i].url}`, {\r\n                headers: {\r\n                    Authorization: `token ${props.access_token}`,\r\n                    method: \"get\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            await res\r\n                .json()\r\n                .then((res: any) => {\r\n                    for (let i = 0; i < res.tree.length; i++) {\r\n                        TempItems.push(JSON.parse(JSON.stringify(res.tree[i])))\r\n                    }\r\n\r\n                })\r\n        }\r\n\r\n        await setLibraryItems(TempItems);\r\n        Utilities.finishLoading();\r\n    }\r\n\r\n    const getOrgLibraryItems = async (orgs: any) => {\r\n        var tree: any[] = [];\r\n        var TempItems: any[] = [];\r\n        for (let j = 0; j < orgs.length; j++) {\r\n            Utilities.startLoading();\r\n\r\n            let res: any;\r\n            res = await fetch(`${(window as any).proxy}https://api.github.com/repos/${orgs[j].login}/Themify_DB/git/trees/main`, {\r\n                headers: {\r\n                    Authorization: `token ${props.access_token}`,\r\n                    method: \"get\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            });\r\n            await res\r\n                .json()\r\n                .then((res: any) => {\r\n                    tree.push(res.tree);\r\n                })\r\n                .catch((e: any) => {\r\n                    console.log(e);\r\n                })\r\n\r\n\r\n        }\r\n        for (var i = 0; i < tree?.length; i++) {\r\n            for (var k = 0; k < tree[i].length; k++) {\r\n                const res = await fetch(`${(window as any).proxy}${tree[i][k].url}`, {\r\n                    headers: {\r\n                        Authorization: `token ${props.access_token}`,\r\n                        method: \"get\",\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                });\r\n\r\n                await res\r\n                    .json()\r\n                    .then((res: any) => {\r\n\r\n                        for (let l = 0; l < res.tree.length; l++) {\r\n                            TempItems.push(JSON.parse(JSON.stringify(res.tree[l])))\r\n                        }\r\n\r\n                    })\r\n            }\r\n\r\n        }\r\n        await setOrgItems(TempItems);\r\n        Utilities.finishLoading();\r\n    }\r\n\r\n    const getOrgs = async (username: any) => {\r\n\r\n        const res = await fetch(`${(window as any).proxy}https://api.github.com/users/${username}/orgs`, {\r\n            headers: {\r\n                Authorization: `token ${props.access_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n\r\n        await res\r\n            .json()\r\n            .then((res: any) => {\r\n                getOrgLibraryItems(res)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"pt-3 row mx-auto\">\r\n                <div className=\"col-md-12\"><h1 className=\"page-header\">{`${props.user.login} ${_(\"THEMES\")}`}</h1></div>\r\n\r\n                {\r\n                    libraryItems?.map((item: any, key: any) =>\r\n                        <div className=\"col-md-6 \" key={key}>\r\n                            <ThemeItem\r\n                                name={item.path}\r\n                                hash={item.url}\r\n                                username={props.user.login}\r\n                                access_token={props.access_token}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"col-md-12\"><h1 className=\"page-header\">{_(\"ORG_THEME\")}</h1></div>\r\n                {\r\n                    orgItems?.map((item: any, key: any) =>\r\n                        <div className=\"col-md-6\" key={key}>\r\n                            <ThemeItem\r\n                                name={item.path}\r\n                                hash={item.url}\r\n                                username={item.url.slice(29, 38)}\r\n                                access_token={props.access_token}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Page, Header, HeaderTitle, Body } from 'blue-react';\r\nimport { appLogo, appTitle, getPhrase as _ } from '../shared';\r\n\r\n\r\nimport LibraryNoLogin from '../components/LibraryNoLogin';\r\nimport LibraryLogin from '../components/LibraryLogin';\r\n\r\nexport default function LibraryPage(props: any) {\r\n\r\n    const [showPage, setShowPage] = useState<Boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (props.user) {\r\n            setShowPage(true);\r\n        }\r\n    }, [props.user])\r\n\r\n\r\n    return (\r\n        <Page>\r\n            <Header>\r\n                <HeaderTitle logo={appLogo} appTitle={appTitle}>{_(\"LIBRARY\")}</HeaderTitle>\r\n            </Header>\r\n            <Body>\r\n                {showPage === true ?\r\n                    <div>\r\n                        <LibraryLogin\r\n                            user={props.user}\r\n                            access_token={props.access_token}\r\n                        />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <LibraryNoLogin />\r\n                    </div>\r\n                }\r\n            </Body>\r\n        </Page>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\n/**\r\n * Icon is from Bootstrap Icons: https://icons.getbootstrap.com/\r\n */\r\n\r\nfunction Icon() {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-house\"\r\n            viewBox=\"0 0 16 16\"\r\n        >\r\n            <path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\">\r\n\r\n            </path>\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nexport default Icon;","import { DropdownMenuItem, MenuItem } from 'blue-react';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Utilities } from \"blue-react\";\r\nimport { getPhrase as _ } from '../shared';\r\nimport GitHubLogin from 'react-github-login';\r\nimport GithubIcon from \"../icons/GitHub\";\r\n\r\n\r\nexport var GithubUserContext = React.createContext(\"das dfgigh\")\r\n\r\n\r\nexport default function GithubLogin(props: any) {\r\n\r\n    const [user, setUser] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        if (user == null) {\r\n            var access_toke = localStorage.getItem(\"access_token\");\r\n\r\n            if (access_toke) {\r\n                Login(access_toke);\r\n            }\r\n\r\n        }\r\n    })\r\n\r\n    const ErrorLogin = () => {\r\n        Utilities.setAlertMessage(\"Fehler beim Anmelden\", \"danger\", true, \"Es konnte keine Verbindung mit Github aufgebaut werden\")\r\n    }\r\n\r\n    const Login = (acces_token: string) => {\r\n        (window as any).access_token = acces_token;\r\n        localStorage.setItem(\"access_token\", acces_token);\r\n\r\n        fetch(`${(window as any).proxy}https://api.github.com/user`, {\r\n            headers: {\r\n                Authorization: `token ${acces_token}`,\r\n                method: \"get\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUser(data);\r\n                props.onChange(data, acces_token);\r\n                (window as any).githubuser = data;\r\n            })\r\n            .catch(() => { ErrorLogin() })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {user ?\r\n                <DropdownMenuItem\r\n                    label={user.login}\r\n                    icon={<img style={{ width: \"30px\", height: \"30px\" }}\r\n                        className=\"rounded-circle align-middle mr-2\"\r\n                        alt={user.login}\r\n                        src={user.avatar_url}\r\n                    >\r\n                    </img>}\r\n                >\r\n                    <MenuItem\r\n                        onClick={() => {\r\n                            if (localStorage.getItem(\"access_token\")) {\r\n                                localStorage.removeItem(\"access_token\")\r\n                                window.location.reload();\r\n                            }\r\n                        }}\r\n                        label=\"Logout\"\r\n                        icon={\r\n                            <svg\r\n                                width=\"1em\"\r\n                                height=\"1em\"\r\n                                viewBox=\"0 0 16 16\"\r\n                                className=\"bi bi-door-closed\"\r\n                                fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M3 2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v13h1.5a.5.5 0 0 1 0 1h-13a.5.5 0 0 1 0-1H3V2zm1 13h8V2H4v13z\"\r\n                                />\r\n                                <path\r\n                                    d=\"M9 9a1 1 0 1 0 2 0 1 1 0 0 0-2 0z\"\r\n                                />\r\n                            </svg>\r\n                        } />\r\n                </DropdownMenuItem>\r\n                :\r\n                <div>\r\n                    <GitHubLogin\r\n                        className=\"blue-app-toggle-page blue-app-sidebar-btn btn blue-app-sidebar-dropdown-toggle has-label btghlogin\"\r\n                        clientId=\"48bc2750433ca7444fa7\"\r\n                        redirectUri=\"\"\r\n                        onSuccess={async ({ code }: { code: string }) => {\r\n                            try {\r\n                                const res = await fetch(`${(window as any).oauth}?code=${code}`);\r\n                                const access = await res.json()\r\n                                Login(access.access_token);\r\n                            }\r\n                            catch (error) {\r\n                                ErrorLogin();\r\n                            }\r\n                        }}\r\n                        onFailure={() => ErrorLogin()}\r\n                        scope={['user', 'repo', 'write:org']}\r\n                        buttonText={<p className=\"m-0\"> <GithubIcon /> {_(\"LOGIN_WITH_GITHUB\")}</p>}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Page, Header, HeaderTitle, Body, Actions, Utilities, Switch } from \"blue-react\";\r\nimport { appLogo, appTitle, getPhrase as _ } from \"../shared\";\r\n\r\n\r\n\r\nfunction SettingsPage(props: any) {\r\n    const [BlueReactVersionen, setBlueReactVersionen] = useState<any>();\r\n    const [CSS, setCSS] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        if (!BlueReactVersionen) {\r\n            getVersions();\r\n        }\r\n    })\r\n\r\n    const getVersions = () => {\r\n        fetch((window as any).themify_proxy + \"versionen\", {\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(response => {\r\n                let array = [] as any[];\r\n\r\n\r\n                const json = response;\r\n                Object.keys(json.time).forEach((key, index) => {\r\n                    if (key !== \"modified\" && key !== \"created\" || key !== \"created\" && key !== \"modified\") {\r\n                        array.push(key);\r\n                    }\r\n                })\r\n\r\n                let currentNumber = undefined as any;\r\n                let currentTempArr = [] as any;\r\n                const sortedArray = array.reduce((tempArr: any, value: any) => {\r\n                    // check if current number is set\r\n                    if (currentNumber == undefined) currentNumber = value;\r\n\r\n                    // if current number then push to temp array\r\n                    const val = value.slice(2, 4);\r\n                    if (currentNumber.includes(val, 2)) {\r\n                        currentTempArr.push(value);\r\n                    }\r\n                    // else just create a new array and push the old one into the parent array\r\n                    else {\r\n                        tempArr.push(currentTempArr);\r\n                        currentTempArr = [];\r\n                        currentNumber = value;\r\n                        currentTempArr.push(value);\r\n                    }\r\n\r\n                    // return the array back to the next reduce iteration\r\n                    return tempArr;\r\n                }, [])\r\n                sortedArray.push(currentTempArr);\r\n\r\n                let array2 = [] as any;\r\n                sortedArray.map((value: any, index: any) => {\r\n                    const v = value.slice(-1);\r\n                    //selected={localStorage.getItem(\"version\") === v[0] ? true : false}\r\n                    array2.push(<option key={index} value={v[0]}>{v[0]}</option>);\r\n                })\r\n\r\n\r\n\r\n                setBlueReactVersionen(array2);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    const getCSS = (version: any, css: any, callback?: (e?: any) => void) => {\r\n\r\n        fetch((window as any).themify_proxy + \"scss_to_css?version=\" + version + \"&css=\" + css, {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(response => {\r\n                Utilities.startLoading();\r\n                localStorage.setItem(\"css\", JSON.stringify(response));\r\n                setCSS(response);\r\n\r\n                callback!(\r\n                    window.location.reload()\r\n                )\r\n            })\r\n    }\r\n\r\n    const installBlueReact = (e: any) => {\r\n        localStorage.setItem(\"version\", e.target.value);\r\n        const changedCSS = \"//\"\r\n        getCSS(e.target.value, changedCSS);\r\n        console.log(localStorage.getItem(\"version\"));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Page hasActions={true} >\r\n            <Header>\r\n                <HeaderTitle logo={appLogo} appTitle={appTitle}>Settings</HeaderTitle>\r\n            </Header>\r\n            <Actions break=\"xl\">\r\n\r\n            </Actions>\r\n            <Body className=\"pl-5 pr-5\">\r\n                <div id=\"settingsPage\">\r\n                    <div className=\"input-group mb-3 w-25 pt-2\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Blue React Version</label>\r\n                        </div>\r\n                        <select value={localStorage.getItem(\"version\")!} onChange={(e: any) => { installBlueReact(e) }} className=\"custom-select\" id=\"inputGroupSelect01\">\r\n                            {BlueReactVersionen?.map((item: any) => (\r\n                                item\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </Body>\r\n        </Page >\r\n    );\r\n}\r\n\r\nexport default SettingsPage;","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, SidebarMenu, MenuItem, Utilities } from \"blue-react\";\r\nimport { Brush, List, Collection, Image, FileText, XCircleFill, InfoCircleFill, CheckCircleFill, ExclamationCircleFill, Gear } from \"react-bootstrap-icons\";\r\nimport { getPhrase as _ } from './shared';\r\n\r\n//Pages\r\nimport HomePage from \"./pages/HomePage\";\r\nimport LibraryPage from \"./pages/LibraryPage\";\r\nimport GithubLogin from \"./components/GithubLogin\";\r\nimport SettingsPage from \"./pages/SettingsPage\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [user, setUser] = useState<any>();\r\n    const [access_token, setAccessToken] = useState<string>(\"\");\r\n    const [default_CSS, setdefault_CSS] = useState<any>();\r\n    const [default_Version, setdefault_Version] = useState<any>();\r\n\r\n\r\n    useEffect(() => {\r\n        if (!default_CSS && !localStorage.getItem(\"css\")) {\r\n            defaultCSS();\r\n        }\r\n\r\n        if (!default_Version && !localStorage.getItem(\"version\")) {\r\n            defaultVersion();\r\n        }\r\n    })\r\n\r\n    const openBlueDocs = () => {\r\n        window.open(\"https://bruegmann.github.io/blue-react/\", \"_blank\")\r\n    }\r\n\r\n    const defaultCSS = () => {\r\n        fetch((window as any).themify_proxy + \"defaultCSS\", {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n\r\n\r\n                setdefault_CSS(response);\r\n            })\r\n    }\r\n\r\n    const defaultVersion = () => {\r\n        fetch((window as any).themify_proxy + \"defaultVersion\", {\r\n            method: \"GET\",\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        })\r\n            .then(res => {\r\n                return res.json();\r\n            })\r\n            .then(response => {\r\n                setdefault_Version(response);\r\n                localStorage.setItem(\"version\", response);\r\n            })\r\n    }\r\n\r\n    return (\r\n        localStorage.getItem(\"css\") || default_CSS ?\r\n            <Grid\r\n                expandSidebar\r\n                sidebarToggleIconComponent={<List />}\r\n                pages={[\r\n                    {\r\n                        name: \"home\",\r\n                        component:\r\n                            <HomePage\r\n                                user={user}\r\n                                access_token={access_token}\r\n                                defaultCSS={default_CSS}\r\n                            />\r\n                    },\r\n                    {\r\n                        name: \"settings\",\r\n                        component:\r\n                            <SettingsPage />\r\n                    },\r\n                    {\r\n                        name: \"library\",\r\n                        component:\r\n                            <LibraryPage\r\n                                user={user}\r\n                                access_token={access_token}\r\n                            />\r\n                    }\r\n\r\n                ]}\r\n                statusIcons={{\r\n                    danger: <XCircleFill />,\r\n                    info: <InfoCircleFill />,\r\n                    success: <CheckCircleFill />,\r\n                    warning: <ExclamationCircleFill />\r\n                }}\r\n            >\r\n                <SidebarMenu\r\n                    bottomContent={\r\n                        <>\r\n                            <MenuItem href=\"#/settings\" icon={<Gear />} label=\"Settings\" />\r\n                            <GithubLogin\r\n                                onChange={(usr: any, token: string) => {\r\n                                    setUser(usr);\r\n                                    setAccessToken(token)\r\n                                }}\r\n                            />\r\n                        </>\r\n                    }>\r\n                    <MenuItem href=\"#/home\" icon={<Brush />} label={_(\"CUSTOMIZER\")} isHome />\r\n                    <MenuItem href=\"#/local-themes\" icon={<Image />} label={_(\"LOCAL_THEME\")} />\r\n                    <MenuItem href=\"#/library\" icon={<Collection />} label={_(\"LIBRARY\")} />\r\n                    <MenuItem onClick={() => openBlueDocs()} icon={<FileText />} label={_(\"BLUE_DOCUMENTATION\")} />\r\n                </SidebarMenu>\r\n                <style\r\n                    type=\"text/css\"\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: `${!localStorage.getItem(\"css\") ? default_CSS : JSON.parse(localStorage.getItem(\"css\") as string)}`\r\n\r\n                    }}\r\n                />\r\n            </Grid>\r\n            :\r\n            <></>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    ReactDOM.render(\r\n        React.createElement(App),\r\n        document.getElementById(\"root\")\r\n    );\r\n});\r\n"],"sourceRoot":""}